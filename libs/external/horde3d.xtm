;;; horde3d.xtm -- Horde3D graphics library

;; Author: Andrew Sorensen
;; Keywords: extempore
;; Required dylibs: libHorde3D, libHorde3DUtils

;;; Commentary:

;;

;;; Code:

;; lib-loading config
(if *impc:compiler:with-cache* (sys:load "libs/aot-cache/horde3d.xtm" 'quiet))
(sys:load-preload-check 'horde3d)

(impc:aot:suppress-aot-do
 (sys:load "libs/base/base.xtm"))
(impc:aot:insert-forms (sys:load "libs/base/base.xtm" 'quiet))

;; set the path to the Horde3D directory

(impc:aot:insert-header "xtmhorde3d")

;; set up the current dylib name and path (for AOT compilation)
(bind-dylib hordelib
  (cond ((string=? (sys:platform) "OSX")
         "/Library/Frameworks/Horde3D.framework/Horde3D")
        ((string=? (sys:platform) "Linux")
         "libHorde3D.so")
        ((string=? (sys:platform) "Windows")
         "Horde3D.dll")))

(impc:aot:import-ll "xtmhorde3d")

(define *xtmlib-horde3d-loaded* #t)

(define new-horde #t)

(if new-horde
    (begin
      (bind-lib hordelib h3dUpdateEmitter [void,i32,float]*)
      (bind-lib hordelib h3dUpdateModel [void,i32,i32]*)
      )
    (begin
      (bind-lib hordelib h3dAdvanceEmitterTime [void,i32,float]*)
      ))

;; horde primary
(bind-lib hordelib h3dInit [i1]*)
(bind-lib hordelib h3dRelease [void]*)
(bind-lib hordelib h3dSetOption [i8,i32,float]*)
(bind-lib hordelib h3dAddResource [i32,i32,i8*,i32]*)
(bind-lib hordelib h3dAddCameraNode [i32,i32,i8*,i32]*)
(bind-lib hordelib h3dAddLightNode [i32,i32,i8*,i32,i8*,i8*]*)
(bind-lib hordelib h3dAddNodes [i32,i32,i32]*)
(bind-lib hordelib h3dRemoveNode [void,i32]*)
(bind-lib hordelib h3dSetNodeTransform [void,i32,float,float,float,float,float,float,float,float,float]*)
(bind-lib hordelib h3dGetNodeTransform [void,i32,float*,float*,float*,float*,float*,float*,float*,float*,float*]*)
(bind-lib hordelib h3dSetupModelAnimStage [void,i32,i32,i32,i32,i8*,i1]*)
(bind-lib hordelib h3dAddModelNode [i32,i32,i8*,i32]*)
(bind-lib hordelib h3dAddMeshNode [i32,i32,i8*,i32,i32,i32,i32,i32]*)
(bind-lib hordelib h3dFindNodes [i32,i32,i8*,i32]*)
(bind-lib hordelib h3dFindResource [i32,i32,i8*]*)
(bind-lib hordelib h3dGetNodeFindResult [i32,i32]*)
(bind-lib hordelib h3dGetNodeAABB [void,i32,float*,float*,float*,float*,float*,float*]*)
(bind-lib hordelib h3dSetMaterialUniform [i1,i32,i8*,float,float,float,float]*)
(bind-lib hordelib h3dSetModelAnimParams [void,i32,i32,float,float]*)
(bind-lib hordelib h3dAddEmitterNode [i32,i32,i8*,i32,i32,i32,i32]*)
(bind-lib hordelib h3dGetNodeParamI [i32,i32,i32]*)
(bind-lib hordelib h3dSetNodeParamI [void,i32,i32,i32]*)
(bind-lib hordelib h3dGetNodeParamStr [i8*,i32,i32]*)
(bind-lib hordelib h3dSetNodeParamStr [void,i32,i32,i8*]*)
(bind-lib hordelib h3dGetNodeParamF [float,i32,i32,i32]*)
(bind-lib hordelib h3dSetNodeParamF [void,i32,i32,i32,float]*)
(bind-lib hordelib h3dGetNodeFlags [i32,i32]*)
(bind-lib hordelib h3dSetNodeFlags [void,i32,i32,i1]*)
(bind-lib hordelib h3dRender [void,i32]*)
(bind-lib hordelib h3dFinalizeFrame [void]*)
(bind-lib hordelib h3dClearOverlays [void]*)
(bind-lib hordelib h3dResizePipelineBuffers [void,i32,i32,i32]*)
(bind-lib hordelib h3dSetupCameraView [void,i32,float,float,float,float]*)
(bind-lib hordelib h3dGetMessage [i8*,i32*,float*]*)
(bind-lib hordelib h3dLoadResource [i1,i32,i8*,i32]*)
(bind-lib hordelib h3dIsResLoaded [i1,i32]*)
(bind-lib hordelib h3dUnloadResource [void,i32]*)
(bind-lib hordelib h3dSetNodeTransMat [void,i32,float*]*)
(bind-lib hordelib h3dGetNodeTransMats [void,i32,float**,float**]*)
(bind-lib hordelib h3dGetRenderTargetData [i1,i32,i8*,i32,i32*,i32*,i32*,i8*,i32]*)
(bind-lib hordelib h3dGetNodeChild [i32,i32,i32]*)
(bind-lib hordelib h3dGetNodeParent [i32,i32]*)
(bind-lib hordelib h3dSetNodeParent [i32,i32,i32]*)
(bind-lib hordelib h3dGetResParamI [i32,i32,i32,i32,i32]*)
(bind-lib hordelib h3dSetResParamI [void,i32,i32,i32,i32,i32]*)
(bind-lib hordelib h3dGetCameraProjMat [void,i32,float*]*)
(bind-lib hordelib h3dCastRay [i32,i32,float,float,float,float,float,float,i32]*)
(bind-lib hordelib h3dGetCastRayResult [i1,i32,i32*,float*,float*]*)

(bind-dylib hordeutlib
  (cond ((string=? (sys:platform) "OSX")
         "/Library/Frameworks/Horde3DUtils.framework/Horde3DUtils")
        ((string=? (sys:platform) "Linux")
         "libHorde3DUtils.so")
        ((string=? (sys:platform) "Windows")
         "Horde3DUtils.dll")))

;; horde utils
(bind-lib hordeutlib h3dutDumpMessages [i1]*)
(bind-lib hordeutlib h3dutLoadResourcesFromDisk [i1,i8*]*)
(bind-lib hordeutlib h3dutCreateGeometryRes [i32,i8*,i32,i32,float*,i32*,i32*,i32*,i32*,float*,float*]*)
(bind-lib hordeutlib h3dutScreenshot [i1,i8*]*)
(bind-lib hordeutlib h3dutShowFrameStats [void,i32,i32,i32]*)
(bind-lib hordeutlib h3dutPickRay [void,i32,float,float,float*,float*,float*,float*,float*,float*]*)
(bind-lib hordeutlib h3dutPickNode [i32,i32,float,float]*)

;; global contants

;; EngineOptions
(bind-val H3DOptions_MaxLogLevel i32 1)
(bind-val H3DOptions_MaxNumMessages i32 2)
(bind-val H3DOptions_TriLinearFiltering i32 3)
(bind-val H3DOptions_MaxAnisotropy i32 4)
(bind-val H3DOptions_TexCompression i32 5)
(bind-val H3DOptions_SRGBLinearization i32 6)
(bind-val H3DOptions_LoadTextures i32 7)
(bind-val H3DOptions_FastAnimation i32 8)
(bind-val H3DOptions_ShadowMapSize i32 9)
(bind-val H3DOptions_SampleCount i32 10)
(bind-val H3DOptions_WireframeMode i32 11)
(bind-val H3DOptions_DebugViewMode i32 12)
(bind-val H3DOptions_DumpFailedShaders i32 13)
(bind-val H3DOptions_GatherTimeStats i32 14)

;; ResourceTypes
(bind-val H3DResTypes_Undefined i32 0)
(bind-val H3DResTypes_SceneGraph i32 1)
(bind-val H3DResTypes_Geometry i32 2)
(bind-val H3DResTypes_Animation i32 3)
(bind-val H3DResTypes_Material i32 4)
(bind-val H3DResTypes_Code i32 5)
(bind-val H3DResTypes_Shader i32 6)
(bind-val H3DResTypes_Texture i32 7)
(bind-val H3DResTypes_ParticleEffect i32 8)
(bind-val H3DResTypes_Pipeline i32 9)

;; SceneNodeTypes
(bind-val H3DNodeTypes_Undefined i32 0)
(bind-val H3DNodeTypes_Group i32 1)
(bind-val H3DNodeTypes_Model i32 2)
(bind-val H3DNodeTypes_Mesh i32 3)
(bind-val H3DNodeTypes_Joint i32 4)
(bind-val H3DNodeTypes_Light i32 5)
(bind-val H3DNodeTypes_Camera i32 6)
(bind-val H3DNodeTypes_Emitter i32 7)

;; SceneNodeParams
(bind-val H3DNode_NameStr i32 1)
(bind-val H3DNode_AttachmentStr i32 2)

;; SceneNodeFlags
(bind-val H3DNodeFlags_NoDraw i32 1)
(bind-val H3DNodeFlags_NoCastShadow i32 2)
(bind-val H3DNodeFlags_NoRayQuery i32 4)
(bind-val H3DNodeFlags_Inactive i32 7)

;; H3DNodeParams
(bind-val H3DNodeParams_NameStr i32 1)
(bind-val H3DNodeParams_AttachmentStr i32 2)

;; Model Node Params
(bind-val H3DModel_GeoResI i32 200)
(bind-val H3DModel_SWSkinningI i32 201)
(bind-val H3DModel_LodDist1F i32 202)
(bind-val H3DModel_LodDist2F i32 203)
(bind-val H3DModel_LodDist3F i32 204)
(bind-val H3DModel_LodDist4F i32 205)

;; Mesh Node Params
(bind-val H3DMesh_MatResI i32 300)
(bind-val H3DMesh_BatchStartI i32 301)
(bind-val H3DMesh_BatchCountI i32 302)
(bind-val H3DMesh_VertRStartI i32 303)
(bind-val H3DMesh_VertREndI i32 304)
(bind-val H3DMesh_LodLevelI i32 305)

;; LightNodeParams
(bind-val H3DLight_MatResI i32 500)
(bind-val H3DLight_RadiusF i32 501)
(bind-val H3DLight_FovF i32 502)
(bind-val H3DLight_ColorF3 i32 503)
(bind-val H3DLight_ColorMultiplierF i32 504)
(bind-val H3DLight_ShadowMapCountI i32 505)
(bind-val H3DLight_ShadowSplitLambdaF i32 506)
(bind-val H3DLight_ShadowMapBiasF i32 507)
(bind-val H3DLight_LightingContextStr i32 508)
(bind-val H3DLight_LightingShadowContextStr i32 509)

;; CameraNodeParams
(bind-val H3DCamera_PipeResI i32 600)
(bind-val H3DCamera_OutTexResI i32 601)
(bind-val H3DCamera_OutBufIndexI i32 602)
(bind-val H3DCamera_LeftPlaneF i32 603)
(bind-val H3DCamera_RightPlaneF i32 604)
(bind-val H3DCamera_BottomPlaneF i32 605)
(bind-val H3DCamera_TopPlaneF i32 606)
(bind-val H3DCamera_NearPlaneF i32 607)
(bind-val H3DCamera_FarPlaneF i32 608)
(bind-val H3DCamera_ViewportXI i32 609)
(bind-val H3DCamera_ViewportYI i32 610)
(bind-val H3DCamera_ViewportWidthI i32 611)
(bind-val H3DCamera_ViewportHeightI i32 612)
(bind-val H3DCamera_OrthoI i32 613)
(bind-val H3DCamera_OccCullingI i32 614)

;; H3DTexRes
(bind-val H3DTexRes_TextureElem i32 700)
(bind-val H3DTexRes_ImageElem i32 701)
(bind-val H3DTexRes_TexFormatI i32 702)
(bind-val H3DTexRes_TexSliceCountI i32 703)
(bind-val H3DTexRes_ImgWidthI i32 704)
(bind-val H3DTexRes_ImgHeightI i32 705)
(bind-val H3DTexRes_ImgPixelStream i32 706)
(if new-horde
    (begin
      (bind-val H3DTexRes_TexGLTexID i32 707)
      (bind-val H3DTexRes_TexGLTexType i32 708)))


;; ROOT NODE
(bind-val H3DRootNode i32 1)

;; MODEL UPDATE FLAGS
(if new-horde
    (begin
      (bind-val H3DModelUpdateFlags_Animation i32 1)
      (bind-val H3DModelUpdateFlags_Geometry i32 2)))


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; Some helper functions

(bind-func rotate-joint
  (lambda (obj name x y z)
    ;; rotate chest joint
    (h3dFindNodes obj name H3DNodeTypes_Joint)
    (let ((joint (h3dGetNodeFindResult 0))
    (dat (salloc 9 float)))
      (h3dGetNodeTransform joint
         (pref-ptr dat 0) (pref-ptr dat 1) (pref-ptr dat 2)
         (pref-ptr dat 3) (pref-ptr dat 4) (pref-ptr dat 5)
         (pref-ptr dat 6) (pref-ptr dat 7) (pref-ptr dat 8))
      (h3dSetNodeTransform joint
         (pref dat 0) (pref dat 1) (pref dat 2)
         (+ (pref dat 3) x)
         (+ (pref dat 4) y)
         (+ (pref dat 5) z)
         (pref dat 6) (pref dat 7) (pref dat 8)))))

(define *xtmlib-horde3d-loaded* #t)

(impc:aot:insert-footer "xtmhorde3d")
