;;; glew.xtm -- GLEW bindings for Extempore

;; Author: Ben Swift
;; Keywords: extempore
;; Required dylibs: libGLEW

;;; Commentary:

;; let's get all our OpenGL procedure addresses through GLEW - that
;; seems to be what all the cool kids are doing on Windows.

;;; Code:

(if *impc:compiler:with-cache* (sys:load "libs/aot-cache/glew.xtm" 'quiet))
(sys:load-preload-check 'glew)
(define *xtmlib-glew-loaded* #t)

(impc:aot:suppress-aot-do
 (sys:load "libs/base/base.xtm"))
(impc:aot:insert-forms
 (sys:load "libs/base/base.xtm" 'quiet))

(impc:aot:insert-header "xtmglew")

(bind-dylib libGLEW
  (cond ((string=? (sys:platform) "OSX")
         "libGLEW.dylib")
        ((string=? (sys:platform) "Linux")
         "libGLEW.so")
        ((string=? (sys:platform) "Windows")
         "glew32.dll")))

(impc:aot:import-ll "xtmglew")


;; GLEW

(bind-val GLEW_OK i32 0)
(bind-val GLEW_NO_ERROR i32 0)
(bind-val GLEW_ERROR_NO_GL_VERSION i32 1)        ; /* missing GL version */
(bind-val GLEW_ERROR_GL_VERSION_10_ONLY i32 2)   ; /* Need at least OpenGL 1.1 */
(bind-val GLEW_ERROR_GLX_VERSION_11_ONLY i32 3)  ; /* Need at least GLX 1.2 */

(bind-lib libGLEW glewInit [i32]*) ;; GLenum
(bind-lib libGLEW glewIsSupported [i8,i8*]*) ;; retval is GLboolean
(bind-lib libGLEW glewGetErrorString [i8*,i32]*)
(bind-lib libGLEW glewGetString [i8*,i32]*)

;; glewExperimental is really a GLboolean (unsigned char)
(bind-val glewExperimental i8) ;; GLboolean

(bind-func glew_init
  (lambda ()
    (set! glewExperimental (convert 1 i8))
    (let ((res (glewInit)))
      (if (= res GLEW_OK)
          (printf "GLEW Initialised\n")
          (printf "%s\n" (glewGetErrorString res)))
      res)))

(impc:aot:insert-footer "xtmglew")
(define *xtmlib-glew-loaded* #t)
