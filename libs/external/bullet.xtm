;;; bullet.xtm -- bullet physics library

;; Author: Andrew Sorensen
;; Keywords: extempore
;; Required dylibs: libBulletDynamics, libhorde3d

;;; Commentary:

;;

;; lib-loading config
(if *impc:compiler:with-cache* (sys:load "libs/aot-cache/bullet.xtm" 'quiet))
(sys:load-preload-check 'bullet)

(impc:aot:suppress-aot-do
 (sys:load "libs/base/base.xtm"))
(impc:aot:insert-forms (sys:load "libs/base/base.xtm" 'quiet))

;;; Code:

(impc:aot:insert-header "xtmbullet")

;; set up the current dylib name and path (for AOT compilation)
(bind-dylib bulletlib
  (cond ((string=? (sys:platform) "Linux")
         "libBulletDynamics.so")
        ((string=? (sys:platform) "Windows")
         "BulletDynamics.dll")
        ((string=? (sys:platform) "OSX")
         "libBulletDynamics.dylib")
        (else
         (begin (print-with-colors 'red 'default #f (print "Error"))
                (print ": unknown platform ")
                (print-with-colors 'yellow 'default #f (print (sys:platform)))))))

(impc:aot:import-ll "xtmbullet")

(define *xtmlib-bullet-loaded* #t)

(define _extended_bullet #t)

(bind-type _plPhysicsSdkHandle <i32>)
(bind-alias plPhysicsSdkHandle _plPhysicsSdkHandle*)
(bind-type _plDynamicsWorldHandle <i32>)
(bind-alias plDynamicsWorldHandle _plDynamicsWorldHandle*)
(bind-type _plRigidBodyHandle <i32>)
(bind-alias plRigidBodyHandle _plRigidBodyHandle*)
(bind-type _plCollisionShapeHandle <i32>)
(bind-alias plCollisionShapeHandle _plCollisionShapeHandle*)
(bind-type _plConstraintHandle <i32>)
(bind-alias plConstraintHandle _plConstraintHandle*)
(bind-type _plMeshInterfaceHandle <i32>)
(bind-alias plMeshInsterfaceHandle _plMeshInterfaceHandle*)
(bind-type _plCollisionBroadphaseHandle <i32>)
(bind-alias plCollisionBroadphaseHandle _plCollisionBroadphaseHandle*)
(bind-type _plBroadphaseProxyHandle <i32>)
(bind-alias plBroadphaseProxyHandle _plBroadphaseProxyHandle*)
(bind-type _plCollisionWorldHandle <i32>)
(bind-alias plCollisionWorldHandle _plCollisionWorldHandle*)
(if _extended_bullet
    (begin
      (bind-type _plHingeConstraintHandle <i32>)
      (bind-alias plHingeConstraintHandle _plHingeConstraintHandle*)))

(bind-alias plReal float)
(bind-alias plVector3 plReal*)
(bind-alias plQuaternion plReal*)

(bind-type plRayCastResult <plRigidBodyHandle,plCollisionShapeHandle,plVector3,plVector3>)

(bind-lib bulletlib plCreateDynamicsWorld [plDynamicsWorldHandle,plPhysicsSdkHandle]*)
(bind-lib bulletlib plDeleteDynamicsWorld [void,plDynamicsWorldHandle]*)
(if _extended_bullet
    (bind-lib bulletlib plSetGravity [void,plDynamicsWorldHandle,plReal*]*))
(bind-lib bulletlib plStepSimulation [void,plDynamicsWorldHandle,plReal,i32,plReal]*)

(bind-lib bulletlib plCreateRigidBody [plRigidBodyHandle,i8*,float,plCollisionShapeHandle]*)
(bind-lib bulletlib plDeleteRigidBody [void,plRigidBodyHandle]*)
(bind-lib bulletlib plNewBulletSdk [plPhysicsSdkHandle]*)
(bind-lib bulletlib plDeletePhysicsSdk [void,plPhysicsSdkHandle]*)

(bind-lib bulletlib plNewConvexHullShape [plCollisionShapeHandle]*)
(bind-lib bulletlib plAddVertex [void,plCollisionShapeHandle,plReal,plReal,plReal]*)
(bind-lib bulletlib plNewBoxShape [plCollisionShapeHandle,plReal,plReal,plReal]*)
(bind-lib bulletlib plNewSphereShape [plCollisionShapeHandle,plReal]*)
(bind-lib bulletlib plNewCylinderShape [plCollisionShapeHandle,plReal,plReal]*)
(bind-lib bulletlib plAddRigidBody [void,plDynamicsWorldHandle,plRigidBodyHandle]*)
(bind-lib bulletlib plRemoveRigidBody [void,plDynamicsWorldHandle,plRigidBodyHandle]*)
(if _extended_bullet
    (begin
      (bind-lib bulletlib plAddHinge [void,plDynamicsWorldHandle,plHingeConstraintHandle]*)
      (bind-lib bulletlib plRemoveHinge [void,plDynamicsWorldHandle,plHingeConstraintHandle]*)
      (bind-lib bulletlib plSetActivationState [void,plRigidBodyHandle,i32]*)
      (bind-lib bulletlib plSetRestitution [void,plRigidBodyHandle,float]*)
      (bind-lib bulletlib plSetDeactivationTime [void,plRigidBodyHandle,float]*)))

(bind-lib bulletlib plSetPosition [void,plRigidBodyHandle,plVector3]*)
(bind-lib bulletlib plGetPosition [void,plRigidBodyHandle,plVector3]*)
(bind-lib bulletlib plSetOrientation [void,plRigidBodyHandle,plQuaternion]*)
(bind-lib bulletlib plSetEuler [void,plReal,plReal,plReal,plQuaternion]*)
(bind-lib bulletlib plSetOpenGLMatrix [void,plRigidBodyHandle,plReal*]*)
(bind-lib bulletlib plGetOpenGLMatrix [void,plRigidBodyHandle,plReal*]*)
(if _extended_bullet
    (begin
      (bind-lib bulletlib plClearForces [void,plRigidBodyHandle]*)
      (bind-lib bulletlib plSetAngularVelocity [void,plRigidBodyHandle,plReal*]*)
      (bind-lib bulletlib plSetLinearVelocity [void,plRigidBodyHandle,plReal*]*)
      (bind-lib bulletlib plCreateHingeConstraint [plHingeConstraintHandle,plRigidBodyHandle,plVector3,plVector3,i1]*)
      (bind-lib bulletlib plSetHingeLimit [void,plHingeConstraintHandle,plReal,plReal]*)
      (bind-lib bulletlib plRayCast [plRigidBodyHandle,plDynamicsWorldHandle,plVector3,plVector3,plRigidBodyHandle*,i32]*)))

(define *xtmlib-bullet-loaded* #t)

(impc:aot:insert-footer "xtmbullet")
