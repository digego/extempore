(bind-func static parametricEQ
  (lambda ()
    (let ((hmid (bell_c))
          (lmid (bell_c))
          (lshelf (lshelf_c))
          (hshelf (hshelf_c))
          (hshelfF:SAMPLE 12000.0)
          (lshelfF:SAMPLE 50.0)
          (hshelfG:SAMPLE 0.0)
          (lshelfG:SAMPLE 0.0)
          (hshelfQ:SAMPLE 0.5)
          (lshelfQ:SAMPLE 0.5)
          (lmidF:SAMPLE 350.0)
          (hmidF:SAMPLE 5000.0)
          (lmidG:SAMPLE 0.0)
          (hmidG:SAMPLE 0.0)
          (lmidQ:SAMPLE 0.5)
          (hmidQ:SAMPLE 0.5))
      (lambda (in chan:i64)
        (if (= chan 0)
            (hshelf (hmid (lmid (lshelf in lshelfF lshelfG lshelfQ)
                                lmidF lmidG lmidQ)
                          hmidF hmidG hmidQ)
                    hshelfF hshelfG hshelfQ)
            0.0)))))


(bind-func static busEQ
  (lambda ()
    (let ((hmid_L (bell_c))
          (lmid_L (bell_c))
          (lshelf_L (lshelf_c))
          (hshelf_L (hshelf_c))
          (hmid_R (bell_c))
          (lmid_R (bell_c))
          (lshelf_R (lshelf_c))
          (hshelf_R (hshelf_c))
          (hshelfF:SAMPLE 12000.0)
          (lshelfF:SAMPLE 50.0)
          (hshelfG:SAMPLE 0.0)
          (lshelfG:SAMPLE 0.0)
          (hshelfQ:SAMPLE 0.5)
          (lshelfQ:SAMPLE 0.5)
          (lmidF:SAMPLE 350.0)
          (hmidF:SAMPLE 5000.0)
          (lmidG:SAMPLE 0.0)
          (hmidG:SAMPLE 0.0)
          (lmidQ:SAMPLE 0.5)
          (hmidQ:SAMPLE 0.5))
      (lambda (in chan:i64)
        (if (= chan 0)
            (hshelf_L (hmid_L (lmid_L (lshelf_L in lshelfF lshelfG lshelfQ)
                                      lmidF lmidG lmidQ)
                              hmidF hmidG hmidQ)
                      hshelfF hshelfG hshelfQ)
            (if (= chan 1)
                (hshelf_R (hmid_R (lmid_R (lshelf_R in lshelfF lshelfG lshelfQ)
                                          lmidF lmidG lmidQ)
                                  hmidF hmidG hmidQ)
                          hshelfF hshelfG hshelfQ)
                0.0))))))


;; low mid (the works with both parametricEQ and busEQ)
(bind-func set_peq_lmid
  (lambda (peq:i8* cutoff:float gain:float Q:float)
    (cset! (cast peq [void]*) lmidG gain float)
    (cset! (cast peq [void]*) lmidF cutoff float)
    (cset! (cast peq [void]*) lmidQ Q float)))

;; high mid (the works with both parametricEQ and busEQ)
(bind-func set_peq_hmid
  (lambda (peq:i8* cutoff:float gain:float Q:float)
    (cset! (cast peq [void]*) hmidG gain float)
    (cset! (cast peq [void]*) hmidF cutoff float)
    (cset! (cast peq [void]*) hmidQ Q float)))

;; high shelf (the works with both parametricEQ and busEQ)
(bind-func set_peq_hshelf
  (lambda (peq:i8* cutoff:float gain:float Q:float)
    (cset! (cast peq [void]*) hshelfG gain float)
    (cset! (cast peq [void]*) hshelfF cutoff float)
    (cset! (cast peq [void]*) hshelfQ Q float)))

;; low shelf (the works with both parametricEQ and busEQ)
(bind-func set_peq_lshelf
  (lambda (peq:i8* cutoff:float gain:float Q:float)
    (cset! (cast peq [void]*) lshelfG gain float)
    (cset! (cast peq [void]*) lshelfF cutoff float)
    (cset! (cast peq [void]*) lshelfQ Q float)))


;;
;; extra stuff!
;;

(bind-func frq_from_val
  (lambda (val:float)
    (clamp (dtof (pow 32.0 (+ (* (ftod val) 2.0) 1.0))) 0.0 22000.0)))

(bind-func midi_lower_mid:[float]*
  (lambda ()
    (println 'LowerMid
             'frq:
             (+ 100.0 (frq_from_val (* 0.6 (aref MCC_ARR 70))))
             'DB
             (* 40.0 (- (aref MCC_ARR 71) 0.7)) ;; -28db to 12db
             'Q
             (+ 0.1 (* 1.9 (aref MCC_ARR 72))))
    (set_peq_lmid (cast (cref dsp1 eq [void]*) i8*)
                  (+ 100.0 (frq_from_val (* 0.6 (aref MCC_ARR 70))))
                  (* 40.0 (- (aref MCC_ARR 71) 0.7)) ;; -28db to 12db
                  (+ 0.1 (* 1.9 (aref MCC_ARR 72))))))

(bind-func midi_upper_mid
  (lambda ()
    (println 'UpperMid
             'frq:
             (+ 1000.0 (frq_from_val (+ 0.2 (* 0.57 (aref MCC_ARR 74)))))
             'DB
             (* 40.0 (- (aref MCC_ARR 75) 0.7)) ;; -28db to 12db
             'Q
             (+ 0.1 (* 1.9 (aref MCC_ARR 76))))
    (set_peq_hmid (cast (cref dsp1 eq [void]*) i8*)
                  (+ 1000.0 (frq_from_val (+ 0.2 (* 0.57 (aref MCC_ARR 74)))))
                  (* 40.0 (- (aref MCC_ARR 75) 0.7)) ;; -28db to 12db
                  (+ 0.1 (* 1.9 (aref MCC_ARR 76))))))

(bind-func midi_high_shelf
  (lambda ()
    (println 'HighShelf
             'frq:
             (+ 8000.0 (frq_from_val (+ 0.3 (* 0.5 (aref MCC_ARR 112)))))
             'DB
             (* 40.0 (- (aref MCC_ARR 113) 0.7)) ;; -28db to 12db
             'Q
             (+ 0.1 (* 1.9 (aref MCC_ARR 114))))
    (set_peq_hshelf (cast (cref dsp1 eq [void]*) i8*)
                  (+ 8000.0 (frq_from_val (+ 0.3 (* 0.5 (aref MCC_ARR 112)))))
                  (* 40.0 (- (aref MCC_ARR 113) 0.7)) ;; -28db to 12db
                  (+ 0.1 (* 1.9 (aref MCC_ARR 114))))))

(bind-func midi_low_shelf
  (lambda ()
    (println 'LowShelf
             'frq:
             (+ 0.0 (* 250.0 (aref MCC_ARR 108)))
             'DB
             (* 40.0 (- (aref MCC_ARR 109) 0.7)) ;; -28db to 12db
             'Q
             (+ 0.1 (* 1.9 (aref MCC_ARR 110))))
    (set_peq_lshelf (cast (cref dsp1 eq [void]*) i8*)
                  (+ 20.0 (* 200.0 (aref MCC_ARR 108)))
                  (* 40.0 (- (aref MCC_ARR 109) 0.7)) ;; -28db to 12db
                  (+ 0.1 (* 1.9 (aref MCC_ARR 110))))))


(bind-func midi_cc
  (lambda (timestamp:i32 controller:i32 value:i32 chan:i32)
    (aset! MCC_ARR controller (/ (i32tof value) 127.0))
    ;; (printf "MIDI_CC: %d %f %d\n" controller (ftod (aref MCC_ARR controller)) chan)
    (if (and (> controller 69) (< controller 73)) (midi_lower_mid))
    (if (and (> controller 73) (< controller 77)) (midi_upper_mid))
    (if (and (> controller 107) (< controller 111)) (midi_low_shelf))
    (if (and (> controller 111) (< controller 115)) (midi_high_shelf))
    void))


(bind-func dsp1:DSP
  (let ((eq (busEQ)))  ;; parametric bus (stereo) eq
    (lambda (in:SAMPLE time:i64 chan:i64 dat:SAMPLE*)
      (if (or (= chan 2) (= chan 3))
          (eq (* 0.5 in) (- chan 2))
          0.0:f))))
