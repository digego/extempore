;;; mpi.xtm -- OpenMPI bindings

;; Author: Ben Swift
;; Keywords: extempore
;; Required dylibs: libopenmpi

;;; Commentary:

;;

;;; Code:

(if *impc:compiler:with-cache* (sys:load "libs/aot-cache/mpi.xtm" 'quiet))
(sys:load-preload-check 'mpi)
(define *xtmlib-mpi-loaded* #t)

(impc:aot:suppress-aot-do
 (sys:load "libs/base/base.xtm"))
(impc:aot:insert-forms (sys:load "libs/base/base.xtm" 'quiet))

(impc:aot:insert-header "xtmmpi")

;; set up the current dylib name and path (for precompilation)
(bind-dylib libmpi
  (cond ((string=? (sys:platform) "OSX")
         "libmpi.dylib")
        ((string=? (sys:platform) "Linux")
         "libmpi.so")
        ((string=? (sys:platform) "Windows")
         "libmpi.dll")))

(bind-lib libmpi MPI_Get_library_version [i32,i8*,i32*]*)
(bind-lib libmpi MPI_Get_version [i32,i32*,i32*]*)

;; bail out if not using Open MPI
;; (impc:aot:do-or-emit
;;  (if (<> (call-as-xtlang
;;           (letz ((ver:i8* (zalloc 1024))
;;                  (lenptr:i32* (zalloc)))
;;             (MPI_Get_library_version ver lenptr)
;;             (strncmp ver "Open MPI" 7)))
;;          0)
;;      (sys:load-escape "Sorry, Extempore's MPI bindings only work with OpenMPI at the moment.")))

;; opaque struct pointers

(bind-alias MPI_Aint i64) ;; OPAL_PTRDIFF_TYPE (ptrdiff_t on OSX 10.10)
(bind-alias MPI_Offset i64) ;; OMPI_MPI_OFFSET_TYPE (long long on OSX 10.10)
(bind-alias MPI_Count i64) ;; OMPI_MPI_COUNT_TYPE (long long on OSX 10.10)
(bind-alias MPI_Comm i8*) ;; ompi_communicator_t*
(bind-alias MPI_Datatype i8*) ;; ompi_datatype_t*
(bind-alias MPI_Errhandler i8*) ;; ompi_errhandler_t*
;; #if OMPI_PROVIDE_MPI_FILE_INTERFACE
(bind-alias MPI_File i8*) ;; ompi_file_t*
;; #endif
(bind-alias MPI_Group i8*) ;; ompi_group_t*
(bind-alias MPI_Info i8*) ;; ompi_info_t*
(bind-alias MPI_Op i8*) ;; ompi_op_t*
(bind-alias MPI_Request i8*) ;; ompi_request_t*
(bind-alias MPI_Message i8*) ;; ompi_message_t*
(bind-alias MPI_Win i8*) ;; ompi_win_t*
(bind-alias MPI_T_enum i8*) ;; mca_base_var_enum_t*

(bind-type ompi_status_public_t <i32,i32,i32,i32,size_t>)
(bind-alias MPI_Status ompi_status_public_t)

;; MPI API

;; these are the most common MPI functions

(bind-lib libmpi MPI_Abort [i32,MPI_Comm,i32]*)
(bind-lib libmpi MPI_Allreduce [i32,i8*,i8*,i32,MPI_Datatype,MPI_Op,MPI_Comm]*)
(bind-lib libmpi MPI_Barrier [i32,MPI_Comm]*)
(bind-lib libmpi MPI_Comm_rank [i32,MPI_Comm,i32*]*)
(bind-lib libmpi MPI_Comm_size [i32,MPI_Comm,i32*]*)
(bind-lib libmpi MPI_Finalize [i32]*)
(bind-lib libmpi MPI_Gather [i32,i8*,i32,MPI_Datatype,i8*,i32,MPI_Datatype,i32,MPI_Comm]*)
(bind-lib libmpi MPI_Get_count [i32,MPI_Status*,MPI_Datatype,i32*]*)
(bind-lib libmpi MPI_Group_rank [i32,MPI_Group,i32*]*)
(bind-lib libmpi MPI_Group_size [i32,MPI_Group,i32*]*)
(bind-lib libmpi MPI_Init [i32,i32*,i8***]*)
(bind-lib libmpi MPI_Initialized [i32,i32*]*)
(bind-lib libmpi MPI_Irecv [i32,i8*,i32,MPI_Datatype,i32,i32,MPI_Comm,MPI_Request*]*)
(bind-lib libmpi MPI_Ireduce [i32,i8*,i8*,i32,MPI_Datatype,MPI_Op,i32,MPI_Comm,MPI_Request*]*)
(bind-lib libmpi MPI_Isend [i32,i8*,i32,MPI_Datatype,i32,i32,MPI_Comm,MPI_Request*]*)
(bind-lib libmpi MPI_Probe [i32,i32,i32,MPI_Comm,MPI_Status*]*)
(bind-lib libmpi MPI_Recv [i32,i8*,i32,MPI_Datatype,i32,i32,MPI_Comm,MPI_Status*]*)
(bind-lib libmpi MPI_Reduce [i32,i8*,i8*,i32,MPI_Datatype,MPI_Op,i32,MPI_Comm]*)
(bind-lib libmpi MPI_Scatter [i32,i8*,i32,MPI_Datatype,i8*,i32,MPI_Datatype,i32,MPI_Comm]*)
(bind-lib libmpi MPI_Send [i32,i8*,i32,MPI_Datatype,i32,i32,MPI_Comm]*)
(bind-lib libmpi MPI_Wait [i32,MPI_Request*,MPI_Status*]*)
(bind-lib libmpi MPI_Wtime [double]*)

;; these are the "extended" functions (i.e. they don't get used in
;; many programs), so we don't bind them by default - change to #t if
;; you need them

(if #f
    (begin
      (bind-lib libmpi MPI_Accumulate [i32,i8*,i32,MPI_Datatype,i32,MPI_Aint,i32,MPI_Datatype,MPI_Op,MPI_Win]*)
      (bind-lib libmpi MPI_Add_error_class [i32,i32*]*)
      (bind-lib libmpi MPI_Add_error_code [i32,i32,i32*]*)
      (bind-lib libmpi MPI_Add_error_string [i32,i32,i8*]*)
      (bind-lib libmpi MPI_Allgather [i32,i8*,i32,MPI_Datatype,i8*,i32,MPI_Datatype,MPI_Comm]*)
      (bind-lib libmpi MPI_Allgatherv [i32,i8*,i32,MPI_Datatype,i8*,i32*,i32*,MPI_Datatype,MPI_Comm]*)
      (bind-lib libmpi MPI_Alloc_mem [i32,MPI_Aint,MPI_Info,i8*]*)
      (bind-lib libmpi MPI_Alltoall [i32,i8*,i32,MPI_Datatype,i8*,i32,MPI_Datatype,MPI_Comm]*)
      (bind-lib libmpi MPI_Alltoallv [i32,i8*,i32*,i32*,MPI_Datatype,i8*,i32*,i32*,MPI_Datatype,MPI_Comm]*)
      (bind-lib libmpi MPI_Alltoallw [i32,i8*,i32*,i32*,MPI_Datatype*,i8*,i32*,i32*,MPI_Datatype*,MPI_Comm]*)
      (bind-lib libmpi MPI_Bcast [i32,i8*,i32,MPI_Datatype,i32,MPI_Comm]*)
      (bind-lib libmpi MPI_Bsend [i32,i8*,i32,MPI_Datatype,i32,i32,MPI_Comm]*)
      (bind-lib libmpi MPI_Bsend_init [i32,i8*,i32,MPI_Datatype,i32,i32,MPI_Comm,MPI_Request*]*)
      (bind-lib libmpi MPI_Buffer_attach [i32,i8*,i32]*)
      (bind-lib libmpi MPI_Buffer_detach [i32,i8*,i32*]*)
      (bind-lib libmpi MPI_Cancel [i32,MPI_Request*]*)
      (bind-lib libmpi MPI_Cart_coords [i32,MPI_Comm,i32,i32,i32*]*)
      (bind-lib libmpi MPI_Cart_create [i32,MPI_Comm,i32,i32*,i32*,i32,MPI_Comm*]*)
      (bind-lib libmpi MPI_Cart_get [i32,MPI_Comm,i32,i32*,i32*,i32*]*)
      (bind-lib libmpi MPI_Cart_map [i32,MPI_Comm,i32,i32*,i32*,i32*]*)
      (bind-lib libmpi MPI_Cart_rank [i32,MPI_Comm,i32*,i32*]*)
      (bind-lib libmpi MPI_Cart_shift [i32,MPI_Comm,i32,i32,i32*,i32*]*)
      (bind-lib libmpi MPI_Cart_sub [i32,MPI_Comm,i32*,MPI_Comm*]*)
      (bind-lib libmpi MPI_Cartdim_get [i32,MPI_Comm,i32*]*)
      (bind-lib libmpi MPI_Close_port [i32,i8*]*)
      (bind-lib libmpi MPI_Comm_accept [i32,i8*,MPI_Info,i32,MPI_Comm,MPI_Comm*]*)
      ;; (bind-lib libmpi MPI_Comm_c2f [MPI_Fint,MPI_Comm]*)
      (bind-lib libmpi MPI_Comm_call_errhandler [i32,MPI_Comm,i32]*)
      (bind-lib libmpi MPI_Comm_compare [i32,MPI_Comm,MPI_Comm,i32*]*)
      (bind-lib libmpi MPI_Comm_connect [i32,i8*,MPI_Info,i32,MPI_Comm,MPI_Comm*]*)
      (bind-lib libmpi MPI_Comm_create [i32,MPI_Comm,MPI_Group,MPI_Comm*]*)
      ;; (bind-lib libmpi MPI_Comm_create_errhandler [i32,MPI_Comm_errhandler_function*,MPI_Errhandler*]*)
      (bind-lib libmpi MPI_Comm_create_group [i32,MPI_Comm,MPI_Group,i32,MPI_Comm*]*)
      ;; (bind-lib libmpi MPI_Comm_create_keyval [i32,MPI_Comm_copy_attr_function*,MPI_Comm_delete_attr_function*,i32*,i8*]*)
      (bind-lib libmpi MPI_Comm_delete_attr [i32,MPI_Comm,i32]*)
      (bind-lib libmpi MPI_Comm_disconnect [i32,MPI_Comm*]*)
      (bind-lib libmpi MPI_Comm_dup [i32,MPI_Comm,MPI_Comm*]*)
      (bind-lib libmpi MPI_Comm_dup_with_info [i32,MPI_Comm,MPI_Info,MPI_Comm*]*)
      ;; (bind-lib libmpi MPI_Comm_f2c [MPI_Comm,MPI_Fint]*)
      (bind-lib libmpi MPI_Comm_free [i32,MPI_Comm*]*)
      (bind-lib libmpi MPI_Comm_free_keyval [i32,i32*]*)
      (bind-lib libmpi MPI_Comm_get_attr [i32,MPI_Comm,i32,i8*,i32*]*)
      (bind-lib libmpi MPI_Comm_get_errhandler [i32,MPI_Comm,MPI_Errhandler*]*)
      (bind-lib libmpi MPI_Comm_get_info [i32,MPI_Comm,MPI_Info*]*)
      (bind-lib libmpi MPI_Comm_get_name [i32,MPI_Comm,i8*,i32*]*)
      (bind-lib libmpi MPI_Comm_get_parent [i32,MPI_Comm*]*)
      (bind-lib libmpi MPI_Comm_group [i32,MPI_Comm,MPI_Group*]*)
      (bind-lib libmpi MPI_Comm_idup [i32,MPI_Comm,MPI_Comm*,MPI_Request*]*)
      (bind-lib libmpi MPI_Comm_join [i32,i32,MPI_Comm*]*)
      (bind-lib libmpi MPI_Comm_remote_group [i32,MPI_Comm,MPI_Group*]*)
      (bind-lib libmpi MPI_Comm_remote_size [i32,MPI_Comm,i32*]*)
      (bind-lib libmpi MPI_Comm_set_attr [i32,MPI_Comm,i32,i8*]*)
      (bind-lib libmpi MPI_Comm_set_errhandler [i32,MPI_Comm,MPI_Errhandler]*)
      (bind-lib libmpi MPI_Comm_set_info [i32,MPI_Comm,MPI_Info]*)
      (bind-lib libmpi MPI_Comm_set_name [i32,MPI_Comm,i8*]*)
      (bind-lib libmpi MPI_Comm_spawn [i32,i8*,i8**,i32,MPI_Info,i32,MPI_Comm,MPI_Comm*,i32*]*)
      (bind-lib libmpi MPI_Comm_spawn_multiple [i32,i32,i8**,i8***,i32*,MPI_Info*,i32,MPI_Comm,MPI_Comm*,i32*]*)
      (bind-lib libmpi MPI_Comm_split [i32,MPI_Comm,i32,i32,MPI_Comm*]*)
      (bind-lib libmpi MPI_Comm_split_type [i32,MPI_Comm,i32,i32,MPI_Info,MPI_Comm*]*)
      (bind-lib libmpi MPI_Comm_test_inter [i32,MPI_Comm,i32*]*)
      (bind-lib libmpi MPI_Compare_and_swap [i32,i8*,i8*,i8*,MPI_Datatype,i32,MPI_Aint,MPI_Win]*)
      (bind-lib libmpi MPI_Dims_create [i32,i32,i32,i32*]*)
      (bind-lib libmpi MPI_Dist_graph_create [i32,MPI_Comm,i32,i32*,i32*,i32*,i32*,MPI_Info,i32,MPI_Comm*]*)
      (bind-lib libmpi MPI_Dist_graph_neighbors_count [i32,MPI_Comm,i32*,i32*,i32*]*)
      ;; (bind-lib libmpi MPI_Errhandler_c2f [MPI_Fint,MPI_Errhandler]*)
      ;; (bind-lib libmpi MPI_Errhandler_f2c [MPI_Errhandler,MPI_Fint]*)
      (bind-lib libmpi MPI_Errhandler_free [i32,MPI_Errhandler*]*)
      (bind-lib libmpi MPI_Error_class [i32,i32,i32*]*)
      (bind-lib libmpi MPI_Error_string [i32,i32,i8*,i32*]*)
      (bind-lib libmpi MPI_Exscan [i32,i8*,i8*,i32,MPI_Datatype,MPI_Op,MPI_Comm]*)
      (bind-lib libmpi MPI_Fetch_and_op [i32,i8*,i8*,MPI_Datatype,i32,MPI_Aint,MPI_Op,MPI_Win]*)
      ;; (bind-lib libmpi MPI_File_c2f [MPI_Fint,MPI_File]*)
      (bind-lib libmpi MPI_File_call_errhandler [i32,MPI_File,i32]*)
      (bind-lib libmpi MPI_File_close [i32,MPI_File*]*)
      ;; (bind-lib libmpi MPI_File_create_errhandler [i32,MPI_File_errhandler_function*,MPI_Errhandler*]*)
      (bind-lib libmpi MPI_File_delete [i32,i8*,MPI_Info]*)
      ;; (bind-lib libmpi MPI_File_f2c [MPI_File,MPI_Fint]*)
      (bind-lib libmpi MPI_File_get_amode [i32,MPI_File,i32*]*)
      (bind-lib libmpi MPI_File_get_atomicity [i32,MPI_File,i32*]*)
      (bind-lib libmpi MPI_File_get_byte_offset [i32,MPI_File,MPI_Offset,MPI_Offset*]*)
      (bind-lib libmpi MPI_File_get_errhandler [i32,MPI_File,MPI_Errhandler*]*)
      (bind-lib libmpi MPI_File_get_group [i32,MPI_File,MPI_Group*]*)
      (bind-lib libmpi MPI_File_get_info [i32,MPI_File,MPI_Info*]*)
      (bind-lib libmpi MPI_File_get_position [i32,MPI_File,MPI_Offset*]*)
      (bind-lib libmpi MPI_File_get_position_shared [i32,MPI_File,MPI_Offset*]*)
      (bind-lib libmpi MPI_File_get_size [i32,MPI_File,MPI_Offset*]*)
      (bind-lib libmpi MPI_File_get_type_extent [i32,MPI_File,MPI_Datatype,MPI_Aint*]*)
      (bind-lib libmpi MPI_File_get_view [i32,MPI_File,MPI_Offset*,MPI_Datatype*,MPI_Datatype*,i8*]*)
      (bind-lib libmpi MPI_File_iread [i32,MPI_File,i8*,i32,MPI_Datatype,MPI_Request*]*)
      (bind-lib libmpi MPI_File_iread_at [i32,MPI_File,MPI_Offset,i8*,i32,MPI_Datatype,MPI_Request*]*)
      (bind-lib libmpi MPI_File_iread_shared [i32,MPI_File,i8*,i32,MPI_Datatype,MPI_Request*]*)
      (bind-lib libmpi MPI_File_iwrite [i32,MPI_File,i8*,i32,MPI_Datatype,MPI_Request*]*)
      (bind-lib libmpi MPI_File_iwrite_at [i32,MPI_File,MPI_Offset,i8*,i32,MPI_Datatype,MPI_Request*]*)
      (bind-lib libmpi MPI_File_iwrite_shared [i32,MPI_File,i8*,i32,MPI_Datatype,MPI_Request*]*)
      (bind-lib libmpi MPI_File_open [i32,MPI_Comm,i8*,i32,MPI_Info,MPI_File*]*)
      (bind-lib libmpi MPI_File_preallocate [i32,MPI_File,MPI_Offset]*)
      (bind-lib libmpi MPI_File_read [i32,MPI_File,i8*,i32,MPI_Datatype,MPI_Status*]*)
      (bind-lib libmpi MPI_File_read_all [i32,MPI_File,i8*,i32,MPI_Datatype,MPI_Status*]*)
      (bind-lib libmpi MPI_File_read_all_begin [i32,MPI_File,i8*,i32,MPI_Datatype]*)
      (bind-lib libmpi MPI_File_read_all_end [i32,MPI_File,i8*,MPI_Status*]*)
      (bind-lib libmpi MPI_File_read_at [i32,MPI_File,MPI_Offset,i8*,i32,MPI_Datatype,MPI_Status*]*)
      (bind-lib libmpi MPI_File_read_at_all [i32,MPI_File,MPI_Offset,i8*,i32,MPI_Datatype,MPI_Status*]*)
      (bind-lib libmpi MPI_File_read_at_all_begin [i32,MPI_File,MPI_Offset,i8*,i32,MPI_Datatype]*)
      (bind-lib libmpi MPI_File_read_at_all_end [i32,MPI_File,i8*,MPI_Status*]*)
      (bind-lib libmpi MPI_File_read_ordered [i32,MPI_File,i8*,i32,MPI_Datatype,MPI_Status*]*)
      (bind-lib libmpi MPI_File_read_ordered_begin [i32,MPI_File,i8*,i32,MPI_Datatype]*)
      (bind-lib libmpi MPI_File_read_ordered_end [i32,MPI_File,i8*,MPI_Status*]*)
      (bind-lib libmpi MPI_File_read_shared [i32,MPI_File,i8*,i32,MPI_Datatype,MPI_Status*]*)
      (bind-lib libmpi MPI_File_seek [i32,MPI_File,MPI_Offset,i32]*)
      (bind-lib libmpi MPI_File_seek_shared [i32,MPI_File,MPI_Offset,i32]*)
      (bind-lib libmpi MPI_File_set_atomicity [i32,MPI_File,i32]*)
      (bind-lib libmpi MPI_File_set_errhandler [i32,MPI_File,MPI_Errhandler]*)
      (bind-lib libmpi MPI_File_set_info [i32,MPI_File,MPI_Info]*)
      (bind-lib libmpi MPI_File_set_size [i32,MPI_File,MPI_Offset]*)
      (bind-lib libmpi MPI_File_set_view [i32,MPI_File,MPI_Offset,MPI_Datatype,MPI_Datatype,i8*,MPI_Info]*)
      (bind-lib libmpi MPI_File_sync [i32,MPI_File]*)
      (bind-lib libmpi MPI_File_write [i32,MPI_File,i8*,i32,MPI_Datatype,MPI_Status*]*)
      (bind-lib libmpi MPI_File_write_all [i32,MPI_File,i8*,i32,MPI_Datatype,MPI_Status*]*)
      (bind-lib libmpi MPI_File_write_all_begin [i32,MPI_File,i8*,i32,MPI_Datatype]*)
      (bind-lib libmpi MPI_File_write_all_end [i32,MPI_File,i8*,MPI_Status*]*)
      (bind-lib libmpi MPI_File_write_at [i32,MPI_File,MPI_Offset,i8*,i32,MPI_Datatype,MPI_Status*]*)
      (bind-lib libmpi MPI_File_write_at_all [i32,MPI_File,MPI_Offset,i8*,i32,MPI_Datatype,MPI_Status*]*)
      (bind-lib libmpi MPI_File_write_at_all_begin [i32,MPI_File,MPI_Offset,i8*,i32,MPI_Datatype]*)
      (bind-lib libmpi MPI_File_write_at_all_end [i32,MPI_File,i8*,MPI_Status*]*)
      (bind-lib libmpi MPI_File_write_ordered [i32,MPI_File,i8*,i32,MPI_Datatype,MPI_Status*]*)
      (bind-lib libmpi MPI_File_write_ordered_begin [i32,MPI_File,i8*,i32,MPI_Datatype]*)
      (bind-lib libmpi MPI_File_write_ordered_end [i32,MPI_File,i8*,MPI_Status*]*)
      (bind-lib libmpi MPI_File_write_shared [i32,MPI_File,i8*,i32,MPI_Datatype,MPI_Status*]*)
      (bind-lib libmpi MPI_Finalized [i32,i32*]*)
      (bind-lib libmpi MPI_Free_mem [i32,i8*]*)
      (bind-lib libmpi MPI_Gatherv [i32,i8*,i32,MPI_Datatype,i8*,i32*,i32*,MPI_Datatype,i32,MPI_Comm]*)
      (bind-lib libmpi MPI_Get [i32,i8*,i32,MPI_Datatype,i32,MPI_Aint,i32,MPI_Datatype,MPI_Win]*)
      (bind-lib libmpi MPI_Get_accumulate [i32,i8*,i32,MPI_Datatype,i8*,i32,MPI_Datatype,i32,MPI_Aint,i32,MPI_Datatype,MPI_Op,MPI_Win]*)
      (bind-lib libmpi MPI_Get_address [i32,i8*,MPI_Aint*]*)
      (bind-lib libmpi MPI_Get_elements [i32,MPI_Status*,MPI_Datatype,i32*]*)
      (bind-lib libmpi MPI_Get_elements_x [i32,MPI_Status*,MPI_Datatype,MPI_Count*]*)
      (bind-lib libmpi MPI_Get_processor_name [i32,i8*,i32*]*)
      (bind-lib libmpi MPI_Graph_create [i32,MPI_Comm,i32,i32*,i32*,i32,MPI_Comm*]*)
      (bind-lib libmpi MPI_Graph_get [i32,MPI_Comm,i32,i32,i32*,i32*]*)
      (bind-lib libmpi MPI_Graph_map [i32,MPI_Comm,i32,i32*,i32*,i32*]*)
      (bind-lib libmpi MPI_Graph_neighbors [i32,MPI_Comm,i32,i32,i32*]*)
      (bind-lib libmpi MPI_Graph_neighbors_count [i32,MPI_Comm,i32,i32*]*)
      (bind-lib libmpi MPI_Graphdims_get [i32,MPI_Comm,i32*,i32*]*)
      (bind-lib libmpi MPI_Grequest_complete [i32,MPI_Request]*)
      ;; (bind-lib libmpi MPI_Grequest_start [i32,MPI_Grequest_query_function*,MPI_Grequest_free_function*,MPI_Grequest_cancel_function*,i8*,MPI_Request*]*)
      ;; (bind-lib libmpi MPI_Group_c2f [MPI_Fint,MPI_Group]*)
      (bind-lib libmpi MPI_Group_compare [i32,MPI_Group,MPI_Group,i32*]*)
      (bind-lib libmpi MPI_Group_difference [i32,MPI_Group,MPI_Group,MPI_Group*]*)
      (bind-lib libmpi MPI_Group_excl [i32,MPI_Group,i32,i32*,MPI_Group*]*)
      ;; (bind-lib libmpi MPI_Group_f2c [MPI_Group,MPI_Fint]*)
      (bind-lib libmpi MPI_Group_free [i32,MPI_Group*]*)
      (bind-lib libmpi MPI_Group_incl [i32,MPI_Group,i32,i32*,MPI_Group*]*)
      (bind-lib libmpi MPI_Group_intersection [i32,MPI_Group,MPI_Group,MPI_Group*]*)
      (bind-lib libmpi MPI_Group_range_excl [i32,MPI_Group,i32,i32*,MPI_Group*]*)
      (bind-lib libmpi MPI_Group_range_incl [i32,MPI_Group,i32,i32*,MPI_Group*]*)
      (bind-lib libmpi MPI_Group_translate_ranks [i32,MPI_Group,i32,i32*,MPI_Group,i32*]*)
      (bind-lib libmpi MPI_Group_union [i32,MPI_Group,MPI_Group,MPI_Group*]*)
      (bind-lib libmpi MPI_Iallgather [i32,i8*,i32,MPI_Datatype,i8*,i32,MPI_Datatype,MPI_Comm,MPI_Request*]*)
      (bind-lib libmpi MPI_Iallgatherv [i32,i8*,i32,MPI_Datatype,i8*,i32*,i32*,MPI_Datatype,MPI_Comm,MPI_Request*]*)
      (bind-lib libmpi MPI_Iallreduce [i32,i8*,i8*,i32,MPI_Datatype,MPI_Op,MPI_Comm,MPI_Request*]*)
      (bind-lib libmpi MPI_Ialltoall [i32,i8*,i32,MPI_Datatype,i8*,i32,MPI_Datatype,MPI_Comm,MPI_Request*]*)
      (bind-lib libmpi MPI_Ialltoallv [i32,i8*,i32*,i32*,MPI_Datatype,i8*,i32*,i32*,MPI_Datatype,MPI_Comm,MPI_Request*]*)
      (bind-lib libmpi MPI_Ialltoallw [i32,i8*,i32*,i32*,MPI_Datatype*,i8*,i32*,i32*,MPI_Datatype*,MPI_Comm,MPI_Request*]*)
      (bind-lib libmpi MPI_Ibarrier [i32,MPI_Comm,MPI_Request*]*)
      (bind-lib libmpi MPI_Ibcast [i32,i8*,i32,MPI_Datatype,i32,MPI_Comm,MPI_Request*]*)
      (bind-lib libmpi MPI_Ibsend [i32,i8*,i32,MPI_Datatype,i32,i32,MPI_Comm,MPI_Request*]*)
      (bind-lib libmpi MPI_Iexscan [i32,i8*,i8*,i32,MPI_Datatype,MPI_Op,MPI_Comm,MPI_Request*]*)
      (bind-lib libmpi MPI_Igather [i32,i8*,i32,MPI_Datatype,i8*,i32,MPI_Datatype,i32,MPI_Comm,MPI_Request*]*)
      (bind-lib libmpi MPI_Igatherv [i32,i8*,i32,MPI_Datatype,i8*,i32*,i32*,MPI_Datatype,i32,MPI_Comm,MPI_Request*]*)
      (bind-lib libmpi MPI_Improbe [i32,i32,i32,MPI_Comm,i32*,MPI_Message*,MPI_Status*]*)
      (bind-lib libmpi MPI_Imrecv [i32,i8*,i32,MPI_Datatype,MPI_Message*,MPI_Request*]*)
      (bind-lib libmpi MPI_Ineighbor_allgather [i32,i8*,i32,MPI_Datatype,i8*,i32,MPI_Datatype,MPI_Comm,MPI_Request*]*)
      (bind-lib libmpi MPI_Ineighbor_allgatherv [i32,i8*,i32,MPI_Datatype,i8*,i32*,i32*,MPI_Datatype,MPI_Comm,MPI_Request*]*)
      (bind-lib libmpi MPI_Ineighbor_alltoall [i32,i8*,i32,MPI_Datatype,i8*,i32,MPI_Datatype,MPI_Comm,MPI_Request*]*)
      (bind-lib libmpi MPI_Ineighbor_alltoallv [i32,i8*,i32*,i32*,MPI_Datatype,i8*,i32*,i32*,MPI_Datatype,MPI_Comm,MPI_Request*]*)
      (bind-lib libmpi MPI_Ineighbor_alltoallw [i32,i8*,i32*,MPI_Aint*,MPI_Datatype*,i8*,i32*,MPI_Aint*,MPI_Datatype*,MPI_Comm,MPI_Request*]*)
      ;; (bind-lib libmpi MPI_Info_c2f [MPI_Fint,MPI_Info]*)
      (bind-lib libmpi MPI_Info_create [i32,MPI_Info*]*)
      (bind-lib libmpi MPI_Info_delete [i32,MPI_Info,i8*]*)
      (bind-lib libmpi MPI_Info_dup [i32,MPI_Info,MPI_Info*]*)
      ;; (bind-lib libmpi MPI_Info_f2c [MPI_Info,MPI_Fint]*)
      (bind-lib libmpi MPI_Info_free [i32,MPI_Info*]*)
      (bind-lib libmpi MPI_Info_get [i32,MPI_Info,i8*,i32,i8*,i32*]*)
      (bind-lib libmpi MPI_Info_get_nkeys [i32,MPI_Info,i32*]*)
      (bind-lib libmpi MPI_Info_get_nthkey [i32,MPI_Info,i32,i8*]*)
      (bind-lib libmpi MPI_Info_get_valuelen [i32,MPI_Info,i8*,i32*,i32*]*)
      (bind-lib libmpi MPI_Info_set [i32,MPI_Info,i8*,i8*]*)
      (bind-lib libmpi MPI_Init_thread [i32,i32*,i8***,i32,i32*]*)
      (bind-lib libmpi MPI_Intercomm_create [i32,MPI_Comm,i32,MPI_Comm,i32,i32,MPI_Comm*]*)
      (bind-lib libmpi MPI_Intercomm_merge [i32,MPI_Comm,i32,MPI_Comm*]*)
      (bind-lib libmpi MPI_Iprobe [i32,i32,i32,MPI_Comm,i32*,MPI_Status*]*)
      (bind-lib libmpi MPI_Ireduce_scatter [i32,i8*,i8*,i32*,MPI_Datatype,MPI_Op,MPI_Comm,MPI_Request*]*)
      (bind-lib libmpi MPI_Ireduce_scatter_block [i32,i8*,i8*,i32,MPI_Datatype,MPI_Op,MPI_Comm,MPI_Request*]*)
      (bind-lib libmpi MPI_Irsend [i32,i8*,i32,MPI_Datatype,i32,i32,MPI_Comm,MPI_Request*]*)
      (bind-lib libmpi MPI_Is_thread_main [i32,i32*]*)
      (bind-lib libmpi MPI_Iscan [i32,i8*,i8*,i32,MPI_Datatype,MPI_Op,MPI_Comm,MPI_Request*]*)
      (bind-lib libmpi MPI_Iscatter [i32,i8*,i32,MPI_Datatype,i8*,i32,MPI_Datatype,i32,MPI_Comm,MPI_Request*]*)
      (bind-lib libmpi MPI_Iscatterv [i32,i8*,i32*,i32*,MPI_Datatype,i8*,i32,MPI_Datatype,i32,MPI_Comm,MPI_Request*]*)
      (bind-lib libmpi MPI_Issend [i32,i8*,i32,MPI_Datatype,i32,i32,MPI_Comm,MPI_Request*]*)
      ;; (bind-lib libmpi MPI_Keyval_create [i32,MPI_Copy_function*,MPI_Delete_function*,i32*,i8*]*)
      (bind-lib libmpi MPI_Keyval_free [i32,i32*]*)
      (bind-lib libmpi MPI_Lookup_name [i32,i8*,MPI_Info,i8*]*)
      ;; (bind-lib libmpi MPI_Message_c2f [MPI_Fint,MPI_Message]*)
      ;; (bind-lib libmpi MPI_Message_f2c [MPI_Message,MPI_Fint]*)
      (bind-lib libmpi MPI_Mprobe [i32,i32,i32,MPI_Comm,MPI_Message*,MPI_Status*]*)
      (bind-lib libmpi MPI_Mrecv [i32,i8*,i32,MPI_Datatype,MPI_Message*,MPI_Status*]*)
      (bind-lib libmpi MPI_Neighbor_allgather [i32,i8*,i32,MPI_Datatype,i8*,i32,MPI_Datatype,MPI_Comm]*)
      (bind-lib libmpi MPI_Neighbor_allgatherv [i32,i8*,i32,MPI_Datatype,i8*,i32*,i32*,MPI_Datatype,MPI_Comm]*)
      (bind-lib libmpi MPI_Neighbor_alltoall [i32,i8*,i32,MPI_Datatype,i8*,i32,MPI_Datatype,MPI_Comm]*)
      (bind-lib libmpi MPI_Neighbor_alltoallv [i32,i8*,i32*,i32*,MPI_Datatype,i8*,i32*,i32*,MPI_Datatype,MPI_Comm]*)
      (bind-lib libmpi MPI_Neighbor_alltoallw [i32,i8*,i32*,MPI_Aint*,MPI_Datatype*,i8*,i32*,MPI_Aint*,MPI_Datatype*,MPI_Comm]*)
      ;; (bind-lib libmpi MPI_Op_c2f [MPI_Fint,MPI_Op]*)
      (bind-lib libmpi MPI_Op_commutative [i32,MPI_Op,i32*]*)
      ;; (bind-lib libmpi MPI_Op_create [i32,MPI_User_function*,i32,MPI_Op*]*)
      ;; (bind-lib libmpi MPI_Op_f2c [MPI_Op,MPI_Fint]*)
      (bind-lib libmpi MPI_Op_free [i32,MPI_Op*]*)
      (bind-lib libmpi MPI_Open_port [i32,MPI_Info,i8*]*)
      (bind-lib libmpi MPI_Pack [i32,i8*,i32,MPI_Datatype,i8*,i32,i32*,MPI_Comm]*)
      (bind-lib libmpi MPI_Pack_external [i32,i8*,i8*,i32,MPI_Datatype,i8*,MPI_Aint,MPI_Aint*]*)
      (bind-lib libmpi MPI_Pack_external_size [i32,i8*,i32,MPI_Datatype,MPI_Aint*]*)
      (bind-lib libmpi MPI_Pack_size [i32,i32,MPI_Datatype,MPI_Comm,i32*]*)
      (bind-lib libmpi MPI_Pcontrol [i32,i32,...]*)
      (bind-lib libmpi MPI_Publish_name [i32,i8*,MPI_Info,i8*]*)
      (bind-lib libmpi MPI_Put [i32,i8*,i32,MPI_Datatype,i32,MPI_Aint,i32,MPI_Datatype,MPI_Win]*)
      (bind-lib libmpi MPI_Query_thread [i32,i32*]*)
      (bind-lib libmpi MPI_Raccumulate [i32,i8*,i32,MPI_Datatype,i32,MPI_Aint,i32,MPI_Datatype,MPI_Op,MPI_Win,MPI_Request*]*)
      (bind-lib libmpi MPI_Recv_init [i32,i8*,i32,MPI_Datatype,i32,i32,MPI_Comm,MPI_Request*]*)
      (bind-lib libmpi MPI_Reduce_local [i32,i8*,i8*,i32,MPI_Datatype,MPI_Op]*)
      (bind-lib libmpi MPI_Reduce_scatter [i32,i8*,i8*,i32*,MPI_Datatype,MPI_Op,MPI_Comm]*)
      (bind-lib libmpi MPI_Reduce_scatter_block [i32,i8*,i8*,i32,MPI_Datatype,MPI_Op,MPI_Comm]*)
      ;; (bind-lib libmpi MPI_Register_datarep [i32,i8*,MPI_Datarep_conversion_function*,MPI_Datarep_conversion_function*,MPI_Datarep_extent_function*,i8*]*)
      ;; (bind-lib libmpi MPI_Request_c2f [MPI_Fint,MPI_Request]*)
      ;; (bind-lib libmpi MPI_Request_f2c [MPI_Request,MPI_Fint]*)
      (bind-lib libmpi MPI_Request_free [i32,MPI_Request*]*)
      (bind-lib libmpi MPI_Request_get_status [i32,MPI_Request,i32*,MPI_Status*]*)
      (bind-lib libmpi MPI_Rget [i32,i8*,i32,MPI_Datatype,i32,MPI_Aint,i32,MPI_Datatype,MPI_Win,MPI_Request*]*)
      (bind-lib libmpi MPI_Rget_accumulate [i32,i8*,i32,MPI_Datatype,i8*,i32,MPI_Datatype,i32,MPI_Aint,i32,MPI_Datatype,MPI_Op,MPI_Win,MPI_Request*]*)
      (bind-lib libmpi MPI_Rput [i32,i8*,i32,MPI_Datatype,i32,MPI_Aint,i32,MPI_Datatype,MPI_Win,MPI_Request*]*)
      (bind-lib libmpi MPI_Rsend [i32,i8*,i32,MPI_Datatype,i32,i32,MPI_Comm]*)
      (bind-lib libmpi MPI_Rsend_init [i32,i8*,i32,MPI_Datatype,i32,i32,MPI_Comm,MPI_Request*]*)
      (bind-lib libmpi MPI_Scan [i32,i8*,i8*,i32,MPI_Datatype,MPI_Op,MPI_Comm]*)
      (bind-lib libmpi MPI_Scatterv [i32,i8*,i32*,i32*,MPI_Datatype,i8*,i32,MPI_Datatype,i32,MPI_Comm]*)
      (bind-lib libmpi MPI_Send_init [i32,i8*,i32,MPI_Datatype,i32,i32,MPI_Comm,MPI_Request*]*)
      (bind-lib libmpi MPI_Sendrecv [i32,i8*,i32,MPI_Datatype,i32,i32,i8*,i32,MPI_Datatype,i32,i32,MPI_Comm,MPI_Status*]*)
      (bind-lib libmpi MPI_Sendrecv_replace [i32,i8*,i32,MPI_Datatype,i32,i32,i32,i32,MPI_Comm,MPI_Status*]*)
      (bind-lib libmpi MPI_Ssend [i32,i8*,i32,MPI_Datatype,i32,i32,MPI_Comm]*)
      (bind-lib libmpi MPI_Ssend_init [i32,i8*,i32,MPI_Datatype,i32,i32,MPI_Comm,MPI_Request*]*)
      (bind-lib libmpi MPI_Start [i32,MPI_Request*]*)
      (bind-lib libmpi MPI_Startall [i32,i32,MPI_Request*]*)
      ;; (bind-lib libmpi MPI_Status_c2f [i32,MPI_Status*,MPI_Fint*]*)
      ;; (bind-lib libmpi MPI_Status_f2c [i32,MPI_Fint*,MPI_Status*]*)
      (bind-lib libmpi MPI_Status_set_cancelled [i32,MPI_Status*,i32]*)
      (bind-lib libmpi MPI_Status_set_elements [i32,MPI_Status*,MPI_Datatype,i32]*)
      (bind-lib libmpi MPI_Status_set_elements_x [i32,MPI_Status*,MPI_Datatype,MPI_Count]*)
      (bind-lib libmpi MPI_Test [i32,MPI_Request*,i32*,MPI_Status*]*)
      (bind-lib libmpi MPI_Test_cancelled [i32,MPI_Status*,i32*]*)
      (bind-lib libmpi MPI_Testall [i32,i32,MPI_Request*,i32*,MPI_Status*]*)
      (bind-lib libmpi MPI_Testany [i32,i32,MPI_Request*,i32*,i32*,MPI_Status*]*)
      (bind-lib libmpi MPI_Testsome [i32,i32,MPI_Request*,i32*,i32*,MPI_Status*]*)
      (bind-lib libmpi MPI_Topo_test [i32,MPI_Comm,i32*]*)
      ;; (bind-lib libmpi MPI_Type_c2f [MPI_Fint,MPI_Datatype]*)
      (bind-lib libmpi MPI_Type_commit [i32,MPI_Datatype*]*)
      (bind-lib libmpi MPI_Type_contiguous [i32,i32,MPI_Datatype,MPI_Datatype*]*)
      (bind-lib libmpi MPI_Type_create_darray [i32,i32,i32,i32,i32*,i32*,i32*,i32*,i32,MPI_Datatype,MPI_Datatype*]*)
      (bind-lib libmpi MPI_Type_create_f90_complex [i32,i32,i32,MPI_Datatype*]*)
      (bind-lib libmpi MPI_Type_create_f90_integer [i32,i32,MPI_Datatype*]*)
      (bind-lib libmpi MPI_Type_create_f90_real [i32,i32,i32,MPI_Datatype*]*)
      (bind-lib libmpi MPI_Type_create_hindexed [i32,i32,i32*,MPI_Aint*,MPI_Datatype,MPI_Datatype*]*)
      (bind-lib libmpi MPI_Type_create_hindexed_block [i32,i32,i32,MPI_Aint*,MPI_Datatype,MPI_Datatype*]*)
      (bind-lib libmpi MPI_Type_create_hvector [i32,i32,i32,MPI_Aint,MPI_Datatype,MPI_Datatype*]*)
      (bind-lib libmpi MPI_Type_create_indexed_block [i32,i32,i32,i32*,MPI_Datatype,MPI_Datatype*]*)
      ;; (bind-lib libmpi MPI_Type_create_keyval [i32,MPI_Type_copy_attr_function*,MPI_Type_delete_attr_function*,i32*,i8*]*)
      (bind-lib libmpi MPI_Type_create_resized [i32,MPI_Datatype,MPI_Aint,MPI_Aint,MPI_Datatype*]*)
      (bind-lib libmpi MPI_Type_create_struct [i32,i32,i32*,MPI_Aint*,MPI_Datatype*,MPI_Datatype*]*)
      (bind-lib libmpi MPI_Type_create_subarray [i32,i32,i32*,i32*,i32*,i32,MPI_Datatype,MPI_Datatype*]*)
      (bind-lib libmpi MPI_Type_delete_attr [i32,MPI_Datatype,i32]*)
      (bind-lib libmpi MPI_Type_dup [i32,MPI_Datatype,MPI_Datatype*]*)
      (bind-lib libmpi MPI_Type_extent [i32,MPI_Datatype,MPI_Aint*]*)
      ;; (bind-lib libmpi MPI_Type_f2c [MPI_Datatype,MPI_Fint]*)
      (bind-lib libmpi MPI_Type_free [i32,MPI_Datatype*]*)
      (bind-lib libmpi MPI_Type_free_keyval [i32,i32*]*)
      (bind-lib libmpi MPI_Type_get_attr [i32,MPI_Datatype,i32,i8*,i32*]*)
      (bind-lib libmpi MPI_Type_get_contents [i32,MPI_Datatype,i32,i32,i32,i32*,MPI_Aint*,MPI_Datatype*]*)
      (bind-lib libmpi MPI_Type_get_envelope [i32,MPI_Datatype,i32*,i32*,i32*,i32*]*)
      (bind-lib libmpi MPI_Type_get_extent [i32,MPI_Datatype,MPI_Aint*,MPI_Aint*]*)
      (bind-lib libmpi MPI_Type_get_extent_x [i32,MPI_Datatype,MPI_Count*,MPI_Count*]*)
      (bind-lib libmpi MPI_Type_get_name [i32,MPI_Datatype,i8*,i32*]*)
      (bind-lib libmpi MPI_Type_get_true_extent [i32,MPI_Datatype,MPI_Aint*,MPI_Aint*]*)
      (bind-lib libmpi MPI_Type_get_true_extent_x [i32,MPI_Datatype,MPI_Count*,MPI_Count*]*)
      (bind-lib libmpi MPI_Type_hindexed [i32,i32,i32*,MPI_Aint*,MPI_Datatype,MPI_Datatype*]*)
      (bind-lib libmpi MPI_Type_hvector [i32,i32,i32,MPI_Aint,MPI_Datatype,MPI_Datatype*]*)
      (bind-lib libmpi MPI_Type_indexed [i32,i32,i32*,i32*,MPI_Datatype,MPI_Datatype*]*)
      (bind-lib libmpi MPI_Type_match_size [i32,i32,i32,MPI_Datatype*]*)
      (bind-lib libmpi MPI_Type_set_attr [i32,MPI_Datatype,i32,i8*]*)
      (bind-lib libmpi MPI_Type_set_name [i32,MPI_Datatype,i8*]*)
      (bind-lib libmpi MPI_Type_size [i32,MPI_Datatype,i32*]*)
      (bind-lib libmpi MPI_Type_size_x [i32,MPI_Datatype,MPI_Count*]*)
      (bind-lib libmpi MPI_Type_struct [i32,i32,i32*,MPI_Aint*,MPI_Datatype*,MPI_Datatype*]*)
      (bind-lib libmpi MPI_Type_vector [i32,i32,i32,i32,MPI_Datatype,MPI_Datatype*]*)
      (bind-lib libmpi MPI_Unpack [i32,i8*,i32,i32*,i8*,i32,MPI_Datatype,MPI_Comm]*)
      (bind-lib libmpi MPI_Unpack_external [i32,i8*,i8*,MPI_Aint,MPI_Aint*,i8*,i32,MPI_Datatype]*)
      (bind-lib libmpi MPI_Unpublish_name [i32,i8*,MPI_Info,i8*]*)
      (bind-lib libmpi MPI_Waitall [i32,i32,MPI_Request*,MPI_Status*]*)
      (bind-lib libmpi MPI_Waitany [i32,i32,MPI_Request*,i32*,MPI_Status*]*)
      (bind-lib libmpi MPI_Waitsome [i32,i32,MPI_Request*,i32*,i32*,MPI_Status*]*)
      (bind-lib libmpi MPI_Win_allocate [i32,MPI_Aint,i32,MPI_Info,MPI_Comm,i8*,MPI_Win*]*)
      (bind-lib libmpi MPI_Win_allocate_shared [i32,MPI_Aint,i32,MPI_Info,MPI_Comm,i8*,MPI_Win*]*)
      (bind-lib libmpi MPI_Win_attach [i32,MPI_Win,i8*,MPI_Aint]*)
      ;; (bind-lib libmpi MPI_Win_c2f [MPI_Fint,MPI_Win]*)
      (bind-lib libmpi MPI_Win_call_errhandler [i32,MPI_Win,i32]*)
      (bind-lib libmpi MPI_Win_complete [i32,MPI_Win]*)
      (bind-lib libmpi MPI_Win_create [i32,i8*,MPI_Aint,i32,MPI_Info,MPI_Comm,MPI_Win*]*)
      (bind-lib libmpi MPI_Win_create_dynamic [i32,MPI_Info,MPI_Comm,MPI_Win*]*)
      ;; (bind-lib libmpi MPI_Win_create_errhandler [i32,MPI_Win_errhandler_function*,MPI_Errhandler*]*)
      ;; (bind-lib libmpi MPI_Win_create_keyval [i32,MPI_Win_copy_attr_function*,MPI_Win_delete_attr_function*,i32*,i8*]*)
      (bind-lib libmpi MPI_Win_delete_attr [i32,MPI_Win,i32]*)
      (bind-lib libmpi MPI_Win_detach [i32,MPI_Win,i8*]*)
      ;; (bind-lib libmpi MPI_Win_f2c [MPI_Win,MPI_Fint]*)
      (bind-lib libmpi MPI_Win_fence [i32,i32,MPI_Win]*)
      (bind-lib libmpi MPI_Win_flush [i32,i32,MPI_Win]*)
      (bind-lib libmpi MPI_Win_flush_all [i32,MPI_Win]*)
      (bind-lib libmpi MPI_Win_flush_local [i32,i32,MPI_Win]*)
      (bind-lib libmpi MPI_Win_flush_local_all [i32,MPI_Win]*)
      (bind-lib libmpi MPI_Win_free [i32,MPI_Win*]*)
      (bind-lib libmpi MPI_Win_free_keyval [i32,i32*]*)
      (bind-lib libmpi MPI_Win_get_attr [i32,MPI_Win,i32,i8*,i32*]*)
      (bind-lib libmpi MPI_Win_get_errhandler [i32,MPI_Win,MPI_Errhandler*]*)
      (bind-lib libmpi MPI_Win_get_group [i32,MPI_Win,MPI_Group*]*)
      (bind-lib libmpi MPI_Win_get_info [i32,MPI_Win,MPI_Info*]*)
      (bind-lib libmpi MPI_Win_get_name [i32,MPI_Win,i8*,i32*]*)
      (bind-lib libmpi MPI_Win_lock [i32,i32,i32,i32,MPI_Win]*)
      (bind-lib libmpi MPI_Win_lock_all [i32,i32,MPI_Win]*)
      (bind-lib libmpi MPI_Win_post [i32,MPI_Group,i32,MPI_Win]*)
      (bind-lib libmpi MPI_Win_set_attr [i32,MPI_Win,i32,i8*]*)
      (bind-lib libmpi MPI_Win_set_errhandler [i32,MPI_Win,MPI_Errhandler]*)
      (bind-lib libmpi MPI_Win_set_info [i32,MPI_Win,MPI_Info]*)
      (bind-lib libmpi MPI_Win_set_name [i32,MPI_Win,i8*]*)
      (bind-lib libmpi MPI_Win_shared_query [i32,MPI_Win,i32,MPI_Aint*,i32*,i8*]*)
      (bind-lib libmpi MPI_Win_start [i32,MPI_Group,i32,MPI_Win]*)
      (bind-lib libmpi MPI_Win_sync [i32,MPI_Win]*)
      (bind-lib libmpi MPI_Win_test [i32,MPI_Win,i32*]*)
      (bind-lib libmpi MPI_Win_unlock [i32,i32,MPI_Win]*)
      (bind-lib libmpi MPI_Win_unlock_all [i32,MPI_Win]*)
      (bind-lib libmpi MPI_Win_wait [i32,MPI_Win]*)
      (bind-lib libmpi MPI_Wtick [double]*)))


;; /*
;;  * MPI predefined handles
;;  */

;; communicators

(bind-lib-val libmpi ompi_mpi_comm_world_addr MPI_Comm)
(bind-val MPI_COMM_WORLD MPI_Comm)
(bind-lib-val libmpi ompi_mpi_comm_self_addr MPI_Comm)
(bind-val MPI_COMM_SELF MPI_Comm)
(bind-lib-val libmpi ompi_mpi_comm_null_addr MPI_Comm)
(bind-val MPI_COMM_NULL MPI_Comm)

(impc:aot:do-or-emit
 (call-as-xtlang
  (set! MPI_COMM_WORLD ompi_mpi_comm_world_addr)
  (set! MPI_COMM_SELF ompi_mpi_comm_self_addr)
  (set! MPI_COMM_NULL ompi_mpi_comm_null_addr)))

;; group/message

(bind-lib-val libmpi ompi_mpi_group_empty MPI_Group)
(bind-val MPI_GROUP_EMPTY MPI_Group)
(bind-lib-val libmpi ompi_message_no_proc MPI_Message)
(bind-val MPI_MESSAGE_NO_PROC MPI_Message)

;; operators

(bind-lib-val libmpi ompi_mpi_op_null_addr MPI_Op)
(bind-val MPI_NULL MPI_Op)
(bind-lib-val libmpi ompi_mpi_op_max_addr MPI_Op)
(bind-val MPI_MAX MPI_Op)
(bind-lib-val libmpi ompi_mpi_op_min_addr MPI_Op)
(bind-val MPI_MIN MPI_Op)
(bind-lib-val libmpi ompi_mpi_op_sum_addr MPI_Op)
(bind-val MPI_SUM MPI_Op)
(bind-lib-val libmpi ompi_mpi_op_prod_addr MPI_Op)
(bind-val MPI_PROD MPI_Op)
(bind-lib-val libmpi ompi_mpi_op_land_addr MPI_Op)
(bind-val MPI_LAND MPI_Op)
(bind-lib-val libmpi ompi_mpi_op_band_addr MPI_Op)
(bind-val MPI_BAND MPI_Op)
(bind-lib-val libmpi ompi_mpi_op_lor_addr MPI_Op)
(bind-val MPI_LOR MPI_Op)
(bind-lib-val libmpi ompi_mpi_op_bor_addr MPI_Op)
(bind-val MPI_BOR MPI_Op)
(bind-lib-val libmpi ompi_mpi_op_lxor_addr MPI_Op)
(bind-val MPI_LXOR MPI_Op)
(bind-lib-val libmpi ompi_mpi_op_bxor_addr MPI_Op)
(bind-val MPI_BXOR MPI_Op)
(bind-lib-val libmpi ompi_mpi_op_maxloc_addr MPI_Op)
(bind-val MPI_MAXLOC MPI_Op)
(bind-lib-val libmpi ompi_mpi_op_minloc_addr MPI_Op)
(bind-val MPI_MINLOC MPI_Op)
(bind-lib-val libmpi ompi_mpi_op_replace_addr MPI_Op)
(bind-val MPI_REPLACE MPI_Op)
(bind-lib-val libmpi ompi_mpi_op_no_op_addr MPI_Op)
(bind-val MPI_NO_OP MPI_Op)

(impc:aot:do-or-emit
 (call-as-xtlang
  (set! MPI_NULL ompi_mpi_op_null_addr)
  (set! MPI_MAX ompi_mpi_op_max_addr)
  (set! MPI_MIN ompi_mpi_op_min_addr)
  (set! MPI_SUM ompi_mpi_op_sum_addr)
  (set! MPI_PROD ompi_mpi_op_prod_addr)
  (set! MPI_LAND ompi_mpi_op_land_addr)
  (set! MPI_BAND ompi_mpi_op_band_addr)
  (set! MPI_LOR ompi_mpi_op_lor_addr)
  (set! MPI_BOR ompi_mpi_op_bor_addr)
  (set! MPI_LXOR ompi_mpi_op_lxor_addr)
  (set! MPI_BXOR ompi_mpi_op_bxor_addr)
  (set! MPI_MAXLOC ompi_mpi_op_maxloc_addr)
  (set! MPI_MINLOC ompi_mpi_op_minloc_addr)
  (set! MPI_REPLACE ompi_mpi_op_replace_addr)
  (set! MPI_NO_OP ompi_mpi_op_no_op_addr)))
(impc:aot:insert-forms
 (call-as-xtlang
   (set! MPI_NULL ompi_mpi_op_null_addr)
   (set! MPI_MAX ompi_mpi_op_max_addr)
   (set! MPI_MIN ompi_mpi_op_min_addr)
   (set! MPI_SUM ompi_mpi_op_sum_addr)
   (set! MPI_PROD ompi_mpi_op_prod_addr)
   (set! MPI_LAND ompi_mpi_op_land_addr)
   (set! MPI_BAND ompi_mpi_op_band_addr)
   (set! MPI_LOR ompi_mpi_op_lor_addr)
   (set! MPI_BOR ompi_mpi_op_bor_addr)
   (set! MPI_LXOR ompi_mpi_op_lxor_addr)
   (set! MPI_BXOR ompi_mpi_op_bxor_addr)
   (set! MPI_MAXLOC ompi_mpi_op_maxloc_addr)
   (set! MPI_MINLOC ompi_mpi_op_minloc_addr)
   (set! MPI_REPLACE ompi_mpi_op_replace_addr)
   (set! MPI_NO_OP ompi_mpi_op_no_op_addr)))

;; constants

(bind-val MPI_STATUS_IGNORE MPI_Status*)
(bind-val MPI_STATUSES_IGNORE MPI_Status*)

(impc:aot:do-or-emit
 (call-as-xtlang
  (set! MPI_STATUS_IGNORE (convert 0 MPI_Status*))
  (set! MPI_STATUSES_IGNORE (convert 0 MPI_Status*))
  void))

;; /* Maximum length of datarep string (default is 128) */
(bind-val OPAL_MAX_DATAREP_STRING i32 128)
;; /* Maximum length of error strings (default is 256) */
(bind-val OPAL_MAX_ERROR_STRING i32 256)
;; /* Maximum length of info keys (default is 36) */
(bind-val OPAL_MAX_INFO_KEY i32 36)
;; /* Maximum length of info vals (default is 256) */
(bind-val OPAL_MAX_INFO_VAL i32 256)
;; /* Maximum length of object names (default is 64) */
(bind-val OPAL_MAX_OBJECT_NAME i32 64)
;; /* Maximum length of port names (default is 1024) */
(bind-val OPAL_MAX_PORT_NAME i32 1024)
;; /* Maximum length of processor names (default is 256) */
(bind-val OPAL_MAX_PROCESSOR_NAME i32 256)

;; libmpiaddresses ;;

;; maybe there's a way to get by without these?

(bind-dylib libmpiaddresses
  (cond ((string=? (sys:platform) "OSX")
         "libmpiaddresses.dylib")
        ((string=? (sys:platform) "Linux")
         "libmpiaddresses.so")
        ((string=? (sys:platform) "Windows")
         "libmpiaddresses.dll")))

;; /* C datatypes */
(bind-lib-val libmpiaddresses ompi_mpi_datatype_null_addr MPI_Datatype)
(bind-val MPI_DATATYPE_NULL MPI_Datatype)
(bind-lib-val libmpiaddresses ompi_mpi_byte_addr MPI_Datatype)
(bind-val MPI_BYTE MPI_Datatype)
(bind-lib-val libmpiaddresses ompi_mpi_packed_addr MPI_Datatype)
(bind-val MPI_PACKED MPI_Datatype)
(bind-lib-val libmpiaddresses ompi_mpi_char_addr MPI_Datatype)
(bind-val MPI_CHAR MPI_Datatype)
(bind-lib-val libmpiaddresses ompi_mpi_short_addr MPI_Datatype)
(bind-val MPI_SHORT MPI_Datatype)
(bind-lib-val libmpiaddresses ompi_mpi_int_addr MPI_Datatype)
(bind-val MPI_INT MPI_Datatype)
(bind-lib-val libmpiaddresses ompi_mpi_long_addr MPI_Datatype)
(bind-val MPI_LONG MPI_Datatype)
(bind-lib-val libmpiaddresses ompi_mpi_float_addr MPI_Datatype)
(bind-val MPI_FLOAT MPI_Datatype)
(bind-lib-val libmpiaddresses ompi_mpi_double_addr MPI_Datatype)
(bind-val MPI_DOUBLE MPI_Datatype)
(bind-lib-val libmpiaddresses ompi_mpi_long_double_addr MPI_Datatype)
(bind-val MPI_LONG_DOUBLE MPI_Datatype)
(bind-lib-val libmpiaddresses ompi_mpi_unsigned_char_addr MPI_Datatype)
(bind-val MPI_UNSIGNED_CHAR MPI_Datatype)
(bind-lib-val libmpiaddresses ompi_mpi_signed_char_addr MPI_Datatype)
(bind-val MPI_SIGNED_CHAR MPI_Datatype)
(bind-lib-val libmpiaddresses ompi_mpi_unsigned_short_addr MPI_Datatype)
(bind-val MPI_UNSIGNED_SHORT MPI_Datatype)
(bind-lib-val libmpiaddresses ompi_mpi_unsigned_long_addr MPI_Datatype)
(bind-val MPI_UNSIGNED_LONG MPI_Datatype)
(bind-lib-val libmpiaddresses ompi_mpi_unsigned_addr MPI_Datatype)
(bind-val MPI_UNSIGNED MPI_Datatype)
(bind-lib-val libmpiaddresses ompi_mpi_wchar_addr MPI_Datatype)
(bind-val MPI_WCHAR MPI_Datatype)
(bind-lib-val libmpiaddresses ompi_mpi_long_long_int_addr MPI_Datatype)
(bind-val MPI_LONG_LONG_INT MPI_Datatype)
(bind-val MPI_LONG_LONG MPI_Datatype)
(bind-lib-val libmpiaddresses ompi_mpi_unsigned_long_long_addr MPI_Datatype)
(bind-val MPI_UNSIGNED_LONG_LONG MPI_Datatype)

(impc:aot:do-or-emit
 (call-as-xtlang
  (set! MPI_DATATYPE_NULL ompi_mpi_datatype_null_addr)
  (set! MPI_BYTE ompi_mpi_byte_addr)
  (set! MPI_PACKED ompi_mpi_packed_addr)
  (set! MPI_CHAR ompi_mpi_char_addr)
  (set! MPI_SHORT ompi_mpi_short_addr)
  (set! MPI_INT ompi_mpi_int_addr)
  (set! MPI_LONG ompi_mpi_long_addr)
  (set! MPI_FLOAT ompi_mpi_float_addr)
  (set! MPI_DOUBLE ompi_mpi_double_addr)
  (set! MPI_LONG_DOUBLE ompi_mpi_long_double_addr)
  (set! MPI_UNSIGNED_CHAR ompi_mpi_unsigned_char_addr)
  (set! MPI_SIGNED_CHAR ompi_mpi_signed_char_addr)
  (set! MPI_UNSIGNED_SHORT ompi_mpi_unsigned_short_addr)
  (set! MPI_UNSIGNED_LONG ompi_mpi_unsigned_long_addr)
  (set! MPI_UNSIGNED ompi_mpi_unsigned_addr)
  (set! MPI_WCHAR ompi_mpi_wchar_addr)
  (set! MPI_LONG_LONG_INT ompi_mpi_long_long_int_addr)
  (set! MPI_LONG_LONG ompi_mpi_long_long_int_addr)
  (set! MPI_UNSIGNED_LONG_LONG ompi_mpi_unsigned_long_long_addr)))
(impc:aot:insert-forms
 (call-as-xtlang
  (set! MPI_DATATYPE_NULL ompi_mpi_datatype_null_addr)
  (set! MPI_BYTE ompi_mpi_byte_addr)
  (set! MPI_PACKED ompi_mpi_packed_addr)
  (set! MPI_CHAR ompi_mpi_char_addr)
  (set! MPI_SHORT ompi_mpi_short_addr)
  (set! MPI_INT ompi_mpi_int_addr)
  (set! MPI_LONG ompi_mpi_long_addr)
  (set! MPI_FLOAT ompi_mpi_float_addr)
  (set! MPI_DOUBLE ompi_mpi_double_addr)
  (set! MPI_LONG_DOUBLE ompi_mpi_long_double_addr)
  (set! MPI_UNSIGNED_CHAR ompi_mpi_unsigned_char_addr)
  (set! MPI_SIGNED_CHAR ompi_mpi_signed_char_addr)
  (set! MPI_UNSIGNED_SHORT ompi_mpi_unsigned_short_addr)
  (set! MPI_UNSIGNED_LONG ompi_mpi_unsigned_long_addr)
  (set! MPI_UNSIGNED ompi_mpi_unsigned_addr)
  (set! MPI_WCHAR ompi_mpi_wchar_addr)
  (set! MPI_LONG_LONG_INT ompi_mpi_long_long_int_addr)
  (set! MPI_LONG_LONG ompi_mpi_long_long_int_addr)
  (set! MPI_UNSIGNED_LONG_LONG ompi_mpi_unsigned_long_long_addr)))

(impc:aot:insert-footer "xtmmpi")
(define *xtmlib-mpi-loaded* #t)
