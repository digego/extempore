(bind-dylib astracorelib
           (cond ((string=? (sys:platform) "OSX")
                  (begin (println "OpenCV Not Supported on Linux") #f))
                 ((string=? (sys:platform) "Linux")
                  (begin (println "OpenCV Not Supported on Linux") #f))
                 ((string=? (sys:platform) "Windows")
                  "astra_core.dll")))

;; astra err codes
(bind-val ASTRA_STATUS_SUCCESS i32 0)
(bind-val ASTRA_STATUS_INVALID_PARAMETER i32 1)
(bind-val ASTRA_STATUS_DEVICE_ERROR i32 2)
(bind-val ASTRA_STATUS_TIMEOUT i32 3)
(bind-val ASTRA_STATUS_INVALID_PARAMETER_TOKEN i32 4)
(bind-val ASTRA_STATUS_INVALID_OPERATION i32 5)
(bind-val ASTRA_STATUS_INTERNAL_ERROR i32 6)
(bind-val ASTRA_STATUS_UNINITIALIZED i32 7)

(bind-alias astra_status_t i32) ;; enum
(bind-alias astra_event_id i32) ;; unsigned
(bind-alias uint32_t i32)
(bind-alias astra_streamsetconnection_t i8*) ;; opaque
(bind-alias astra_reader_t i8*) ;; opaque
(bind-alias astra_stream_type_t i8*) ;; opaque
(bind-alias astra_stream_subtype_t i8*) ;; opaque
(bind-alias astra_streamconnection_t i8*) ;; opaque
(bind-alias astra_stream_desc_t i8*) ;; opaque
(bind-alias astra_reader_frame_t i8*) ;; opaque
(bind-alias astra_frame_ready_callback_t i8*) ;; opaque
(bind-alias astra_reader_callback_id_t i8*) ;; opaque
(bind-alias astra_frame_t i8*) ;; opaque
(bind-alias astra_parameter_id i32)
(bind-alias astra_command_id i32)
(bind-alias astra_parameter_data_t i8*) ;; void*
(bind-alias astra_result_token_t i8*) ;; opaque


(bind-lib astracorelib astra_initialize [astra_status_t]*)
(bind-lib astracorelib astra_terminate [astra_status_t]*)
(bind-lib astracorelib astra_notify_plugin_event [astra_status_t,astra_event_id,i8*,uint32_t]*)
(bind-lib astracorelib astra_streamset_is_available [astra_status_t,astra_streamsetconnection_t,i1*]*)
(bind-lib astracorelib astra_streamset_open [astra_status_t,i8*,astra_streamsetconnection_t*]*)
(bind-lib astracorelib astra_streamset_close [astra_status_t,astra_streamsetconnection_t*]*)
(bind-lib astracorelib astra_streamset_get_uri [astra_status_t,astra_streamsetconnection_t,i8*,i32]*)
(bind-lib astracorelib astra_reader_create [astra_status_t,astra_streamsetconnection_t,astra_reader_t*]*)
(bind-lib astracorelib astra_reader_destroy [astra_status_t,astra_reader_t*]*)

(bind-lib astracorelib astra_reader_get_stream [astra_status_t,astra_reader_t,astra_stream_type_t,astra_stream_subtype_t,astra_streamconnection_t*]*)
(bind-lib astracorelib astra_stream_get_description [astra_status_t,astra_streamconnection_t,astra_stream_desc_t*]*)
(bind-lib astracorelib astra_stream_is_available [astra_status_t,astra_streamconnection_t,bool*]*)
(bind-lib astracorelib astra_stream_start [astra_status_t,astra_streamconnection_t]*)
(bind-lib astracorelib astra_stream_stop [astra_status_t,astra_streamconnection_t]*)
(bind-lib astracorelib astra_reader_has_new_frame [astra_status_t,astra_reader_t,bool*]*)
(bind-lib astracorelib astra_reader_open_frame [astra_status_t,astra_reader_t,i32,astra_reader_frame_t*]*)
(bind-lib astracorelib astra_reader_close_frame [astra_status_t,astra_reader_frame_t*]*)
(bind-lib astracorelib astra_reader_register_frame_ready_callback [astra_status_t,astra_reader_t,astra_frame_ready_callback_t,i8*,astra_reader_callback_id_t*]*)
(bind-lib astracorelib astra_reader_unregister_frame_ready_callback [astra_status_t,astra_reader_callback_id_t*]*)
(bind-lib astracorelib astra_reader_get_frame [astra_status_t,astra_reader_frame_t,astra_stream_type_t,astra_stream_subtype_t,astra_frame_t**]*)
(bind-lib astracorelib astra_stream_set_parameter [astra_status_t,astra_streamconnection_t,astra_parameter_id,uint32_t,astra_parameter_data_t]*)
(bind-lib astracorelib astra_stream_get_parameter [astra_status_t,astra_streamconnection_t,astra_parameter_id,uint32_t*,astra_result_token_t*]*)

; (bind-lib astracorelib astra_stream_get_result [astra_status_t,astra_streamconnection_t connection,astra_result_token_t token,uint32_t dataByteLength,astra_parameter_data_t dataDestination]*)
; (bind-lib astracorelib astra_stream_invoke [astra_status_t,astra_streamconnection_t connection,astra_command_id commandId,uint32_t inByteLength,astra_parameter_data_t inData,uint32_t* resultByteLength,astra_result_token_t* token]*)
(bind-lib astracorelib astra_update [astra_status_t]*)



(bind-dylib astralib
            (cond ((string=? (sys:platform) "OSX")
                   (begin (println "OpenCV Not Supported on Linux") #f))
                  ((string=? (sys:platform) "Linux")
                   (begin (println "OpenCV Not Supported on Linux") #f))
                  ((string=? (sys:platform) "Windows")
                   "astra.dll")))

;; (bind-alias astra_status_t i8*) ;; opaque
(bind-alias astra_colorizedbodystream_t i8*)
(bind-alias astra_colorizedbodyframe_t i8*)
(bind-alias astra_rgba_pixel_t i8*)
(bind-alias astra_image_metadata_t i8*)
(bind-alias astra_frame_index_t i8*)

(bind-lib astralib astra_reader_get_colorizedbodystream [astra_status_t,astra_reader_t,astra_colorizedbodystream_t*]*)
(bind-lib astralib astra_colorizedbodystream_is_available [astra_status_t,astra_colorizedbodystream_t,bool*]*)
(bind-lib astralib astra_frame_get_colorizedbodyframe [astra_status_t,astra_reader_frame_t,astra_colorizedbodyframe_t*]*)
(bind-lib astralib astra_frame_get_colorizedbodyframe_with_subtype [astra_status_t,astra_reader_frame_t,astra_stream_subtype_t,astra_colorizedbodyframe_t*]*)
(bind-lib astralib astra_colorizedbodyframe_get_data_byte_length [astra_status_t,astra_colorizedbodyframe_t,i32*]*) ;; unsigned i32*
(bind-lib astralib astra_colorizedbodyframe_get_data_ptr [astra_status_t,astra_colorizedbodyframe_t,astra_rgba_pixel_t**,i32*]*)
(bind-lib astralib astra_colorizedbodyframe_copy_data [astra_status_t,astra_colorizedbodyframe_t,astra_rgba_pixel_t*]*)
(bind-lib astralib astra_colorizedbodyframe_get_metadata [astra_status_t,astra_colorizedbodyframe_t,astra_image_metadata_t*]*)
(bind-lib astralib astra_colorizedbodyframe_get_frameindex [astra_status_t,astra_colorizedbodyframe_t,astra_frame_index_t*]*)

;; width, height, isestimaged
(bind-type astra_bodyframe_info_t <i32,i32,i8>)
;; data=|640x480,i8|, width, height
(bind-val ASTRA_MAX_BODIES i32 6)

(bind-type astra_vector3f_t <float,float,float>)
(bind-type astra_vector2f_t <float,float>)
(bind-type astra_matrix3x3_t <astra_vector3f_t,astra_vector3f_t,astra_vector3f_t>)
(bind-type astra_handpose_info_t <i8,i8>)

(bind-val ASTRA_JOINT_HEAD i32 0)
(bind-val ASTRA_JOINT_LEFT_HAND i32 4)
(bind-val ASTRA_JOINT_RIGHT_HAND        i32 7)
(bind-val ASTRA_JOINT_LEFT_WRIST        i32 16)
(bind-val ASTRA_JOINT_RIGHT_WRIST       i32 17)
(bind-val ASTRA_JOINT_NECK              i32 18)
(bind-val ASTRA_JOINT_UNKNOWN           i32 255)

(bind-val ASTRA_JOINT_STATUS_NOT_TRACKED i32 0)
(bind-val ASTRA_JOINT_STATUS_LOW_CONFIDENCE i32 1)
(bind-val ASTRA_JOINT_STATUS_TRACKED i32 2)

(bind-val ASTRA_BODY_STATUS_NOT_TRACKING i32 0)
(bind-val ASTRA_BODY_STATUS_LOST i32 1)
(bind-val ASTRA_BODY_STATUS_TRACKING_STARTED i32 2)
(bind-val ASTRA_BODY_STATUS_TRACKING i32 3)

(bind-type astra_joint_t <i8,i8,astra_vector2f_t,astra_vector3f_t,astra_matrix3x3_t>)
(bind-type astra_body_t <i32,astra_vector3f_t,astra_joint_t,astra_handpose_info_t,i8,i8>)
(bind-type astra_body_list_t <|6,astra_body_t|,i32>)
(bind-type astra_bitmapmask_t <i8*,i32,i32> (constructor? . #f) (printer? . #f))
(bind-func astra_bitmapmask_t
  (lambda (width height)
    (let ((obj:astra_bitmapmask_t* (alloc))
          (dat:i8* (alloc (* width height))))
      (tfill! obj dat width height)
      obj)))

(bind-alias astra_bodystream_t i8*) ;; opaque
(bind-alias astra_body_id_t i8) ;; unsigned i8
(bind-alias astra_skeleton_optimization_t uint32_t)
(bind-alias astra_body_tracking_feature_flags_t uint32_t)
(bind-alias astra_skeleton_profile_t uint32_t)
(bind-alias astra_bodyframe_t i8*) ;; opaque
(bind-alias astra_bodymask_t astra_bitmapmask_t)
(bind-alias astra_floor_info_t i8*) ;; this NOT CORRECT! just here for tmp

(bind-lib astralib astra_reader_get_bodystream [astra_status_t,astra_reader_t,astra_bodystream_t*]*)
(bind-lib astralib astra_bodystream_is_available [astra_status_t,astra_bodystream_t,bool*]*)
(bind-lib astralib astra_bodystream_get_body_features [astra_status_t,astra_bodystream_t,astra_body_id_t,astra_body_tracking_feature_flags_t*]*)
(bind-lib astralib astra_bodystream_set_body_features [astra_status_t,astra_bodystream_t,astra_body_id_t,astra_body_tracking_feature_flags_t]*)
(bind-lib astralib astra_bodystream_get_default_body_features [astra_status_t,astra_bodystream_t,astra_body_tracking_feature_flags_t*]*)
(bind-lib astralib astra_bodystream_set_default_body_features [astra_status_t,astra_bodystream_t,astra_body_tracking_feature_flags_t]*)
(bind-lib astralib astra_bodystream_get_skeleton_profile [astra_status_t,astra_bodystream_t,astra_skeleton_profile_t*]*)
(bind-lib astralib astra_bodystream_set_skeleton_profile [astra_status_t,astra_bodystream_t,astra_skeleton_profile_t]*)

(bind-lib astralib astra_bodystream_get_skeleton_optimization [astra_status_t,astra_bodystream_t,astra_skeleton_optimization_t*]*)
(bind-lib astralib astra_bodystream_set_skeleton_optimization [astra_status_t,astra_bodystream_t,astra_skeleton_optimization_t]*)
(bind-lib astralib astra_frame_get_bodyframe [astra_status_t,astra_reader_frame_t,astra_bodyframe_t*]*)
(bind-lib astralib astra_bodyframe_get_frameindex [astra_status_t,astra_bodyframe_t,astra_frame_index_t*]*)
(bind-lib astralib astra_bodyframe_info [astra_status_t,astra_bodyframe_t,astra_bodyframe_info_t*]*)
(bind-lib astralib astra_bodyframe_bodymask [astra_status_t,astra_bodyframe_t,astra_bodymask_t*]*)

(bind-lib astralib astra_bodyframe_bodymask_ptr [astra_status_t,astra_bodyframe_t,uint32_t*,uint32_t*,i8**]*)
(bind-lib astralib astra_bodyframe_copy_bodymask_data [astra_status_t,astra_bodyframe_t,i8*]*)
(bind-lib astralib astra_bodyframe_floor_info [astra_status_t,astra_bodyframe_t,astra_floor_info_t*]*)
(bind-lib astralib astra_bodyframe_floormask_ptr [astra_status_t,astra_bodyframe_t,uint32_t*,uint32_t*,i8**]*)

(bind-lib astralib astra_bodyframe_copy_floormask_data [astra_status_t,astra_bodyframe_t,i8*]*)

(bind-lib astralib astra_bodyframe_floor_info_ptr [astra_status_t,astra_bodyframe_t,astra_floor_info_t**]*)
(bind-lib astralib astra_bodyframe_body_list [astra_status_t,astra_bodyframe_t,astra_body_list_t*]*)
(bind-lib astralib orbbec_body_tracking_set_license [astra_status_t,i8*]*)

(bind-alias astra_colorframe_t i8*)
(bind-alias astra_colorstream_t i8*)

(bind-alias astra_usb_info_t i8*)

(bind-lib astralib astra_reader_get_colorstream [astra_status_t,astra_reader_t,astra_colorstream_t*]*)
(bind-lib astralib astra_colorstream_is_available [astra_status_t,astra_colorstream_t,i1*]*)
(bind-lib astralib astra_colorstream_get_usb_info [astra_colorstream_t,astra_usb_info_t*]*)
(bind-lib astralib astra_frame_get_colorframe [astra_status_t,astra_reader_frame_t,astra_colorframe_t*]*)
(bind-lib astralib astra_frame_get_colorframe_with_subtype [astra_status_t,astra_reader_frame_t,astra_stream_subtype_t,astra_colorframe_t*]*)
(bind-lib astralib astra_colorframe_get_data_byte_length [astra_status_t,astra_colorframe_t,uint32_t*]*)
(bind-lib astralib astra_colorframe_get_data_ptr [astra_status_t,astra_colorframe_t,i8**,uint32_t*]*)
(bind-lib astralib astra_colorframe_get_data_rgb_ptr [astra_status_t,astra_colorframe_t,i8**,uint32_t*]*)
(bind-lib astralib astra_colorframe_copy_data [astra_status_t,astra_colorframe_t,i8*]*)
(bind-lib astralib astra_colorframe_get_metadata [astra_status_t,astra_colorframe_t,astra_image_metadata_t*]*)
(bind-lib astralib astra_colorframe_get_frameindex [astra_status_t,astra_colorframe_t,astra_frame_index_t*]*)

(bind-val ASTRA_PARAMETER_IMAGE_HFOV i32 0)
(bind-val ASTRA_PARAMETER_IMAGE_VFOV i32 1)
(bind-val ASTRA_PARAMETER_IMAGE_MIRRORING i32 2)
(bind-val ASTRA_PARAMETER_IMAGE_AVAILABLE_MODES i32 3)
(bind-val ASTRA_PARAMETER_IMAGE_MODE i32 4)
(bind-val ASTRA_PARAMETER_IMAGE_USB_INFO i32 5)


(bind-alias astra_infraredstream_t i8*)
(bind-alias astra_infraredframe_t i8*)

(bind-lib astralib astra_reader_get_infraredstream [astra_status_t,astra_reader_t,astra_infraredstream_t*]*)
(bind-lib astralib astra_infraredstream_is_available [astra_status_t,astra_infraredstream_t,bool*]*)
(bind-lib astralib astra_infraredstream_get_hfov [astra_status_t,astra_infraredstream_t,float*]*)
(bind-lib astralib astra_infraredstream_get_vfov [astra_status_t,astra_infraredstream_t,float*]*)
(bind-lib astralib astra_infraredstream_get_usb_info [astra_status_t,astra_infraredstream_t,astra_usb_info_t*]*)
(bind-lib astralib astra_frame_get_infraredframe [astra_status_t,astra_reader_frame_t,astra_infraredframe_t*]*)
(bind-lib astralib astra_frame_get_infraredframe_with_subtype [astra_status_t,astra_reader_frame_t,astra_stream_subtype_t,astra_infraredframe_t*]*)
(bind-lib astralib astra_infraredframe_get_data_byte_length [astra_status_t,astra_infraredframe_t,uint32_t*]*)
(bind-lib astralib astra_infraredframe_get_data_ptr [astra_status_t,astra_infraredframe_t,i8**,uint32_t*]*)
(bind-lib astralib astra_infraredframe_copy_data [astra_status_t,astra_infraredframe_t,i8*]*)
(bind-lib astralib astra_infraredframe_get_metadata [astra_status_t,astra_infraredframe_t,astra_image_metadata_t*]*)
(bind-lib astralib astra_infraredframe_get_frameindex [astra_status_t,astra_infraredframe_t,astra_frame_index_t*]*)

(bind-val ASTRA_PIXEL_FORMAT_UNKNOWN i32 0)
(bind-val ASTRA_PIXEL_FORMAT_DEPTH_MM i32 100)
(bind-val ASTRA_PIXEL_FORMAT_RGB888 i32 200)
(bind-val ASTRA_PIXEL_FORMAT_YUV422 i32 201)
(bind-val ASTRA_PIXEL_FORMAT_YUYV i32 202)
(bind-val ASTRA_PIXEL_FORMAT_RGBA i32 203)
(bind-val ASTRA_PIXEL_FORMAT_GRAY8 i32 300)
(bind-val ASTRA_PIXEL_FORMAT_GRAY16 i32 301)
(bind-val ASTRA_PIXEL_FORMAT_POINT i32 400)


(bind-alias astra_imagestream_t i8*)
(bind-alias astra_imagestream_mode_t i8*)
(bind-alias astra_imageframe_t i8*)
(bind-alias astra_pixel_format_t i8*)

(bind-lib astralib astra_imagestream_get_mirroring [astra_status_t,astra_imagestream_t,bool*]*)
(bind-lib astralib astra_imagestream_set_mirroring [astra_status_t,astra_imagestream_t,bool]*)
(bind-lib astralib astra_imagestream_get_hfov [astra_status_t,astra_imagestream_t,float*]*)
(bind-lib astralib astra_imagestream_get_vfov [astra_status_t,astra_imagestream_t,float*]*)
(bind-lib astralib astra_imagestream_get_usb_info [astra_status_t,astra_imagestream_t,astra_usb_info_t*]*)
(bind-lib astralib astra_imagestream_request_modes [astra_status_t,astra_imagestream_t,astra_result_token_t*,uint32_t*]*)
(bind-lib astralib astra_imagestream_get_modes_result [astra_status_t,astra_imagestream_t,astra_result_token_t,astra_imagestream_mode_t*,uint32_t]*)
(bind-lib astralib astra_imagestream_get_mode [astra_status_t,astra_imagestream_t,astra_imagestream_mode_t*]*)
(bind-lib astralib astra_imagestream_set_mode [astra_status_t,astra_imagestream_t,astra_imagestream_mode_t*]*)
(bind-lib astralib astra_reader_get_imageframe [astra_status_t,astra_reader_frame_t,astra_stream_type_t,astra_stream_subtype_t,astra_imageframe_t*]*)
(bind-lib astralib astra_imageframe_get_frameindex [astra_status_t,astra_imageframe_t,astra_frame_index_t*]*)
(bind-lib astralib astra_imageframe_get_data_byte_length [astra_status_t,astra_imageframe_t,uint32_t*]*)
(bind-lib astralib astra_imageframe_get_data_ptr [astra_status_t,astra_imageframe_t,i8**,uint32_t*]*)
(bind-lib astralib astra_imageframe_copy_data [astra_status_t,astra_imageframe_t,i8*]*)
(bind-lib astralib astra_imageframe_get_metadata [astra_status_t,astra_imageframe_t,astra_image_metadata_t*]*)
(bind-lib astralib astra_pixelformat_get_bytes_per_pixel [void,astra_pixel_format_t,i8*]*)

;; can't find this?
;; (bind-lib astralib astra_imageframe_get_stream [astra_status_t,astra_imageframe_t,astra_streamconnection_t*]*)
;; (bind-lib astracorelib astra_imageframe_get_stream [astra_status_t,astra_imageframe_t,astra_streamconnection_t*]*)

(bind-alias astra_depthstream_t i8*)
(bind-alias astra_depthframe_t i8*)
(bind-alias astra_conversion_cache_t i8*)

(bind-lib astralib astra_convert_depth_to_world [astra_status_t,astra_depthstream_t,float,float,float,float*,float*,float*]*)
(bind-lib astralib astra_convert_world_to_depth [astra_status_t,astra_depthstream_t,float,float,float,float*,float*,float*]*)
(bind-lib astralib astra_reader_get_depthstream [astra_status_t,astra_reader_t,astra_depthstream_t*]*)
(bind-lib astralib astra_depthstream_is_available [astra_status_t,astra_depthstream_t,bool*]*)
(bind-lib astralib astra_depthstream_get_depth_to_world_data [astra_status_t,astra_depthstream_t,astra_conversion_cache_t*]*)
(bind-lib astralib astra_depthstream_get_hfov [astra_status_t,astra_depthstream_t,float*]*)
(bind-lib astralib astra_depthstream_get_vfov [astra_status_t,astra_depthstream_t,float*]*)
(bind-lib astralib astra_depthstream_get_registration [astra_status_t,astra_depthstream_t,bool*]*)
(bind-lib astralib astra_depthstream_set_registration [astra_status_t,astra_depthstream_t,bool]*)
(bind-lib astralib astra_depthstream_get_serialnumber [astra_status_t,astra_depthstream_t,i8*,uint32_t]*)
(bind-lib astralib astra_depthstream_get_chip_id [astra_status_t,astra_depthstream_t,uint32_t*]*)
(bind-lib astralib astra_depthstream_get_usb_info [astra_status_t,astra_depthstream_t,astra_usb_info_t*]*)
(bind-lib astralib astra_frame_get_depthframe [astra_status_t,astra_reader_frame_t,astra_depthframe_t*]*)
(bind-lib astralib astra_frame_get_depthframe_with_subtype [astra_status_t,astra_reader_frame_t,astra_stream_subtype_t,astra_depthframe_t*]*)
(bind-lib astralib astra_depthframe_get_data_byte_length [astra_status_t,astra_depthframe_t,uint32_t*]*)
(bind-lib astralib astra_depthframe_get_data_ptr [astra_status_t,astra_depthframe_t,i16**,uint32_t*]*)
(bind-lib astralib astra_depthframe_copy_data [astra_status_t,astra_depthframe_t,i16*]*)
(bind-lib astralib astra_depthframe_get_metadata [astra_status_t,astra_depthframe_t,astra_image_metadata_t*]*)
(bind-lib astralib astra_depthframe_get_frameindex [astra_status_t,astra_depthframe_t,astra_frame_index_t*]*)

(bind-alias astra_handstream_t i8*)
(bind-alias astra_handframe_t i8*)
(bind-alias astra_handpoint_t i8*)
(bind-alias astra_debug_handstream_t i8*)
(bind-alias astra_debug_hand_view_type_t i8*)
(bind-alias astra_debug_handframe_t i8*)
(bind-alias astra_vector2f_t i8*)

(bind-lib astralib astra_reader_get_handstream [astra_status_t,astra_reader_t,astra_handstream_t*]*)
(bind-lib astralib astra_handstream_is_available [astra_status_t,astra_handstream_t,bool*]*)
(bind-lib astralib astra_frame_get_handframe [astra_status_t,astra_reader_frame_t,astra_handframe_t*]*)
(bind-lib astralib astra_frame_get_handframe_with_subtype [astra_status_t,astra_reader_frame_t,astra_stream_subtype_t,astra_handframe_t*]*)
(bind-lib astralib astra_handframe_get_frameindex [astra_status_t,astra_handframe_t,astra_frame_index_t*]*)
(bind-lib astralib astra_handframe_get_hand_count [astra_status_t,astra_handframe_t,uint32_t*]*)
(bind-lib astralib astra_handframe_copy_hands [astra_status_t,astra_handframe_t,astra_handpoint_t*]*)
(bind-lib astralib astra_handframe_get_shared_hand_array [astra_status_t,astra_handframe_t,astra_handpoint_t**,uint32_t*]*)
(bind-lib astralib astra_handstream_get_include_candidate_points [astra_status_t,astra_handstream_t,bool*]*)
(bind-lib astralib astra_handstream_set_include_candidate_points [astra_status_t,astra_handstream_t,bool]*)
(bind-lib astralib astra_reader_get_debug_handstream [astra_status_t,astra_reader_t,astra_debug_handstream_t*]*)
(bind-lib astralib astra_frame_get_debug_handframe [astra_status_t,astra_reader_frame_t,astra_debug_handframe_t*]*)
(bind-lib astralib astra_debug_handstream_get_view_type [astra_status_t,astra_debug_handstream_t,astra_debug_hand_view_type_t*]*)
(bind-lib astralib astra_debug_handstream_set_view_type [astra_status_t,astra_debug_handstream_t,astra_debug_hand_view_type_t]*)
(bind-lib astralib astra_debug_handstream_set_mouse_position [astra_status_t,astra_debug_handstream_t,astra_vector2f_t]*)
(bind-lib astralib astra_debug_handstream_set_use_mouse_probe [astra_status_t,astra_debug_handstream_t,bool]*)
(bind-lib astralib astra_debug_handstream_set_pause_input [astra_status_t,astra_debug_handstream_t,bool]*)
(bind-lib astralib astra_debug_handstream_set_lock_spawn_point [astra_status_t,astra_debug_handstream_t,bool]*)

(bind-type astra_handpoint_X <i32,i32,<i32,i32>,<float,float,float>,<float,float,float>>)

; typedef struct {
;     int32_t trackingId;
;     astra_handstatus_t status;
;     astra_vector2i_t depthPosition;
;     astra_vector3f_t worldPosition;
;     astra_vector3f_t worldDeltaPosition;
; } astra_handpoint_t;
