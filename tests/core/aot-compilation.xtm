;;; aot-compilation.xtm -- tests for ahead-of-time compilation

;; Author: Ben Swift
;; Keywords: extempore
;; Required dylibs:

;;; Commentary:

;; to run these tests, first precompile the test library. In a shell
;; in the Extempore directory,

;; extempore --eval "(impc:aot:compile-xtm-file \"libs/contrib/aot-compilation.xtm\")"

;;; Code:

(if (not (if *impc:compiler:with-cache* (sys:load "libs/aot-cache/aot-compilation.xtm")))
    (sys:load-escape "Error in aot-compilation test: you haven't precompiled aot-test.xtm"))

;; bind-func

(xtmtest-result
 (string=? (impc:ti:get-closure-docstring "bindfunc")
           "")
 #t)

(xtmtest-result
 (string=? (impc:ti:get-closure-docstring "bindfunc_with_docstring")
           "bf+ds")
 #t)

(xtmtest-result
 (string=? (impc:ti:get-closure-docstring "bindfunc_with_zone_size")
           "")
 #t)

(xtmtest-result
 (string=? (impc:ti:get-closure-docstring "bindfunc_with_zone_size_and_docstring")
           "bf+zs+ds")
 #t)

;; bind-poly

(xtmtest-result
 (string=? (impc:ti:get-polyfunc-docstring "bindfuncpoly")
           "")
 #t)

(xtmtest-result
 (string=? (impc:ti:get-polyfunc-docstring "bindfuncpoly_with_docstring")
           "polydoc")
 #t)

;; bind-type

(xtmtest-result
 (string=? (impc:ti:get-namedtype-docstring "BT")
           "")
 #t)

(xtmtest-result
 (string=? (impc:ti:get-namedtype-docstring "BTWithDocstring")
           "bt+ds")
 #t)

;; bind-alias

(xtmtest-result
 (string=? (impc:ti:get-typealias-docstring "BTalias")
           "")
 #t)

(xtmtest-result
 (string=? (impc:ti:get-typealias-docstring "BTaliasWithDocstring")
           "ba+ds")
 #t)

;; bind-val

(xtmtest
 '(bind-func return_string_gv_with_docstring
    (lambda ()
      string_gv_with_docstring))
 (string=? (cptr->string (return_string_gv_with_docstring)) "sgv")
 #t)

(xtmtest-result
 (string=? (impc:ti:get-globalvar-docstring "string_gv_with_docstring") "sgv+ds")
 #t)
;; if there's only one string in the bind-val form and the type is
;; i8*, the string literal is the value (not the docstring)

(xtmtest
 '(bind-func return_string_gv_no_docstring
    (lambda ()
      string_gv_no_docstring))
 (string=? (cptr->string (return_string_gv_no_docstring)) "sgv")
 #t)

(xtmtest-result
 (string=? (impc:ti:get-globalvar-docstring "string_gv_no_docstring") "")
 #t)

(xtmtest
 '(bind-func return_string_gv_no_initval
    (lambda ()
      string_gv_no_initval))
 (string=? (cptr->string (return_string_gv_no_initval)) "")
 #t)

(xtmtest-result
 (string=? (impc:ti:get-globalvar-docstring "string_gv_no_initval") "")
 #t)

(xtmtest-result
 (string=? (impc:ti:get-globalvar-docstring "array_gv_with_docstring") "agv+ds")
 #t)

(xtmtest-result
 (string=? (impc:ti:get-globalvar-docstring "array_gv_no_docstring") "")
 #t)

(xtmtest-result
 (string=? (impc:ti:get-globalvar-docstring "i8_array_gv_with_docstring") "i8agv+ds")
 #t)

(xtmtest-result
 (string=? (impc:ti:get-globalvar-docstring "i8_array_gv_no_docstring") "")
 #t)

(xtmtest-result
 (string=? (impc:ti:get-globalvar-docstring "i8_array_gv_no_initval") "")
 #t)

(bind-func return_ptr_gv_first_with_docstring
  (lambda ()
    (tref ptr_gv_with_docstring 0)))

(bind-func return_ptr_gv_second_with_docstring
  (lambda ()
    (tref ptr_gv_with_docstring 1)))

(xtmtest-result
 (return_ptr_gv_first_with_docstring)
 42)

(xtmtest-result
 (return_ptr_gv_second_with_docstring)
 -4)

(xtmtest-result
 (string=? (impc:ti:get-globalvar-docstring "ptr_gv_with_docstring") "pgv+ds")
 #t)

(xtmtest-result
 (string=? (impc:ti:get-globalvar-docstring "ptr_gv_no_docstring") "")
 #t)

(xtmtest-result
 (string=? (impc:ti:get-globalvar-docstring "noinit_gv_with_docstring") "nigv+ds")
 #t)

(xtmtest-result
 (string=? (impc:ti:get-globalvar-docstring "noinit_gv_no_docstring") "")
 #t)

(xtmtest-print-results)
